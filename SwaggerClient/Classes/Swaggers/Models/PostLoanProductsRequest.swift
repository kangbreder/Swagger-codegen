//
// PostLoanProductsRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct PostLoanProductsRequest: Codable {

    public var name: String?
    public var shortName: String?
    public var currencyCode: String?
    public var locale: String?
    public var digitsAfterDecimal: Int?
    public var inMultiplesOf: Int?
    public var principal: Double?
    public var numberOfRepayments: Int?
    public var repaymentEvery: Int?
    public var repaymentFrequencyType: Int?
    public var transactionProcessingStrategyId: Int?
    public var interestRatePerPeriod: Double?
    public var interestRateFrequencyType: Int?
    public var amortizationType: Int?
    public var interestType: Int?
    public var interestCalculationPeriodType: Int?
    public var daysInMonthType: Int?
    public var daysInYearType: Int?
    public var isInterestRecalculationEnabled: Bool?
    public var accountingRule: Int?
    public var fundSourceAccountId: Int?
    public var loanPortfolioAccountId: Int?
    public var receivableInterestAccountId: Int?
    public var receivableFeeAccountId: Int?
    public var receivablePenaltyAccountId: Int?
    public var interestOnLoanAccountId: Int?
    public var incomeFromFeeAccountId: Int?
    public var incomeFromPenaltyAccountId: Int?
    public var overpaymentLiabilityAccountId: Int?
    public var writeOffAccountId: Int?

    public init(name: String?, shortName: String?, currencyCode: String?, locale: String?, digitsAfterDecimal: Int?, inMultiplesOf: Int?, principal: Double?, numberOfRepayments: Int?, repaymentEvery: Int?, repaymentFrequencyType: Int?, transactionProcessingStrategyId: Int?, interestRatePerPeriod: Double?, interestRateFrequencyType: Int?, amortizationType: Int?, interestType: Int?, interestCalculationPeriodType: Int?, daysInMonthType: Int?, daysInYearType: Int?, isInterestRecalculationEnabled: Bool?, accountingRule: Int?, fundSourceAccountId: Int?, loanPortfolioAccountId: Int?, receivableInterestAccountId: Int?, receivableFeeAccountId: Int?, receivablePenaltyAccountId: Int?, interestOnLoanAccountId: Int?, incomeFromFeeAccountId: Int?, incomeFromPenaltyAccountId: Int?, overpaymentLiabilityAccountId: Int?, writeOffAccountId: Int?) {
        self.name = name
        self.shortName = shortName
        self.currencyCode = currencyCode
        self.locale = locale
        self.digitsAfterDecimal = digitsAfterDecimal
        self.inMultiplesOf = inMultiplesOf
        self.principal = principal
        self.numberOfRepayments = numberOfRepayments
        self.repaymentEvery = repaymentEvery
        self.repaymentFrequencyType = repaymentFrequencyType
        self.transactionProcessingStrategyId = transactionProcessingStrategyId
        self.interestRatePerPeriod = interestRatePerPeriod
        self.interestRateFrequencyType = interestRateFrequencyType
        self.amortizationType = amortizationType
        self.interestType = interestType
        self.interestCalculationPeriodType = interestCalculationPeriodType
        self.daysInMonthType = daysInMonthType
        self.daysInYearType = daysInYearType
        self.isInterestRecalculationEnabled = isInterestRecalculationEnabled
        self.accountingRule = accountingRule
        self.fundSourceAccountId = fundSourceAccountId
        self.loanPortfolioAccountId = loanPortfolioAccountId
        self.receivableInterestAccountId = receivableInterestAccountId
        self.receivableFeeAccountId = receivableFeeAccountId
        self.receivablePenaltyAccountId = receivablePenaltyAccountId
        self.interestOnLoanAccountId = interestOnLoanAccountId
        self.incomeFromFeeAccountId = incomeFromFeeAccountId
        self.incomeFromPenaltyAccountId = incomeFromPenaltyAccountId
        self.overpaymentLiabilityAccountId = overpaymentLiabilityAccountId
        self.writeOffAccountId = writeOffAccountId
    }


}

