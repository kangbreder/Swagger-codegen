//
// GetAccountTransfersPageItems.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct GetAccountTransfersPageItems: Codable {

    public var _id: Int?
    public var reversed: Bool?
    public var currency: GetAccountTransfersPageItemsCurrency?
    public var transferAmount: Float?
    public var transferDate: Date?
    public var transferDescription: String?
    public var fromOffice: GetAccountTransfersPageItemsFromOffice?
    public var fromClient: GetAccountTransfersFromClientOptions?
    public var fromAccountType: GetAccountTransfersFromAccountType?
    public var fromAccount: GetAccountTransfersPageItemsFromAccount?
    public var toOffice: GetAccountTransfersPageItemsFromOffice?
    public var toClient: GetAccountTransfersFromClientOptions?
    public var toAccountType: GetAccountTransfersPageItemsToAccountType?
    public var toAccount: GetAccountTransfersPageItemsFromAccount?

    public init(_id: Int?, reversed: Bool?, currency: GetAccountTransfersPageItemsCurrency?, transferAmount: Float?, transferDate: Date?, transferDescription: String?, fromOffice: GetAccountTransfersPageItemsFromOffice?, fromClient: GetAccountTransfersFromClientOptions?, fromAccountType: GetAccountTransfersFromAccountType?, fromAccount: GetAccountTransfersPageItemsFromAccount?, toOffice: GetAccountTransfersPageItemsFromOffice?, toClient: GetAccountTransfersFromClientOptions?, toAccountType: GetAccountTransfersPageItemsToAccountType?, toAccount: GetAccountTransfersPageItemsFromAccount?) {
        self._id = _id
        self.reversed = reversed
        self.currency = currency
        self.transferAmount = transferAmount
        self.transferDate = transferDate
        self.transferDescription = transferDescription
        self.fromOffice = fromOffice
        self.fromClient = fromClient
        self.fromAccountType = fromAccountType
        self.fromAccount = fromAccount
        self.toOffice = toOffice
        self.toClient = toClient
        self.toAccountType = toAccountType
        self.toAccount = toAccount
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case reversed
        case currency
        case transferAmount
        case transferDate
        case transferDescription
        case fromOffice
        case fromClient
        case fromAccountType
        case fromAccount
        case toOffice
        case toClient
        case toAccountType
        case toAccount
    }


}

