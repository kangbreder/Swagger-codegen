//
// PostProductsTypeRequest.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct PostProductsTypeRequest: Codable {

    public var name: String?
    public var shortName: String?
    public var _description: String?
    public var currencyCode: String?
    public var digitsAfterDecimal: Int?
    public var inMultiplesOf: Int?
    public var locale: String?
    public var totalShares: Int?
    public var sharesIssued: Int?
    public var unitPrice: Int?
    public var minimumShares: Int?
    public var nominalShares: Int?
    public var maximumShares: Int?
    public var minimumActivePeriodForDividends: Int?
    public var minimumactiveperiodFrequencyType: Int?
    public var lockinPeriodFrequency: Int?
    public var lockinPeriodFrequencyType: Int?
    public var allowDividendCalculationForInactiveClients: Bool?
    public var marketPricePeriods: [PostProductsMarketPricePeriods]?
    public var chargesSelected: [PostProductsChargesSelected]?
    public var accountingRule: Int?

    public init(name: String?, shortName: String?, _description: String?, currencyCode: String?, digitsAfterDecimal: Int?, inMultiplesOf: Int?, locale: String?, totalShares: Int?, sharesIssued: Int?, unitPrice: Int?, minimumShares: Int?, nominalShares: Int?, maximumShares: Int?, minimumActivePeriodForDividends: Int?, minimumactiveperiodFrequencyType: Int?, lockinPeriodFrequency: Int?, lockinPeriodFrequencyType: Int?, allowDividendCalculationForInactiveClients: Bool?, marketPricePeriods: [PostProductsMarketPricePeriods]?, chargesSelected: [PostProductsChargesSelected]?, accountingRule: Int?) {
        self.name = name
        self.shortName = shortName
        self._description = _description
        self.currencyCode = currencyCode
        self.digitsAfterDecimal = digitsAfterDecimal
        self.inMultiplesOf = inMultiplesOf
        self.locale = locale
        self.totalShares = totalShares
        self.sharesIssued = sharesIssued
        self.unitPrice = unitPrice
        self.minimumShares = minimumShares
        self.nominalShares = nominalShares
        self.maximumShares = maximumShares
        self.minimumActivePeriodForDividends = minimumActivePeriodForDividends
        self.minimumactiveperiodFrequencyType = minimumactiveperiodFrequencyType
        self.lockinPeriodFrequency = lockinPeriodFrequency
        self.lockinPeriodFrequencyType = lockinPeriodFrequencyType
        self.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients
        self.marketPricePeriods = marketPricePeriods
        self.chargesSelected = chargesSelected
        self.accountingRule = accountingRule
    }

    public enum CodingKeys: String, CodingKey { 
        case name
        case shortName
        case _description = "description"
        case currencyCode
        case digitsAfterDecimal
        case inMultiplesOf
        case locale
        case totalShares
        case sharesIssued
        case unitPrice
        case minimumShares
        case nominalShares
        case maximumShares
        case minimumActivePeriodForDividends
        case minimumactiveperiodFrequencyType
        case lockinPeriodFrequency
        case lockinPeriodFrequencyType
        case allowDividendCalculationForInactiveClients
        case marketPricePeriods
        case chargesSelected
        case accountingRule
    }


}

