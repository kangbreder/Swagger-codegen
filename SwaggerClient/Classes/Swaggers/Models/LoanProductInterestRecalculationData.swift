//
// LoanProductInterestRecalculationData.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct LoanProductInterestRecalculationData: Codable {

    public var interestRecalculationCompoundingType: EnumOptionData?
    public var rescheduleStrategyType: EnumOptionData?
    public var recalculationRestFrequencyType: EnumOptionData?
    public var recalculationRestFrequencyInterval: Int?
    public var recalculationRestFrequencyNthDay: EnumOptionData?
    public var recalculationRestFrequencyWeekday: EnumOptionData?
    public var recalculationRestFrequencyOnDay: Int?
    public var recalculationCompoundingFrequencyType: EnumOptionData?
    public var recalculationCompoundingFrequencyInterval: Int?
    public var recalculationCompoundingFrequencyNthDay: EnumOptionData?
    public var recalculationCompoundingFrequencyWeekday: EnumOptionData?
    public var recalculationCompoundingFrequencyOnDay: Int?
    public var compoundingToBePostedAsTransaction: Bool?

    public init(interestRecalculationCompoundingType: EnumOptionData?, rescheduleStrategyType: EnumOptionData?, recalculationRestFrequencyType: EnumOptionData?, recalculationRestFrequencyInterval: Int?, recalculationRestFrequencyNthDay: EnumOptionData?, recalculationRestFrequencyWeekday: EnumOptionData?, recalculationRestFrequencyOnDay: Int?, recalculationCompoundingFrequencyType: EnumOptionData?, recalculationCompoundingFrequencyInterval: Int?, recalculationCompoundingFrequencyNthDay: EnumOptionData?, recalculationCompoundingFrequencyWeekday: EnumOptionData?, recalculationCompoundingFrequencyOnDay: Int?, compoundingToBePostedAsTransaction: Bool?) {
        self.interestRecalculationCompoundingType = interestRecalculationCompoundingType
        self.rescheduleStrategyType = rescheduleStrategyType
        self.recalculationRestFrequencyType = recalculationRestFrequencyType
        self.recalculationRestFrequencyInterval = recalculationRestFrequencyInterval
        self.recalculationRestFrequencyNthDay = recalculationRestFrequencyNthDay
        self.recalculationRestFrequencyWeekday = recalculationRestFrequencyWeekday
        self.recalculationRestFrequencyOnDay = recalculationRestFrequencyOnDay
        self.recalculationCompoundingFrequencyType = recalculationCompoundingFrequencyType
        self.recalculationCompoundingFrequencyInterval = recalculationCompoundingFrequencyInterval
        self.recalculationCompoundingFrequencyNthDay = recalculationCompoundingFrequencyNthDay
        self.recalculationCompoundingFrequencyWeekday = recalculationCompoundingFrequencyWeekday
        self.recalculationCompoundingFrequencyOnDay = recalculationCompoundingFrequencyOnDay
        self.compoundingToBePostedAsTransaction = compoundingToBePostedAsTransaction
    }


}

