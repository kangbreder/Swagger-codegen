//
// GetProductsTypeProductIdResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct GetProductsTypeProductIdResponse: Codable {

    public var _id: Int?
    public var name: String?
    public var shortName: String?
    public var _description: String?
    public var currency: GetProductsCurrency?
    public var totalShares: Int?
    public var totalSharesIssued: Int?
    public var unitPrice: Int?
    public var shareCapital: Int?
    public var minimumShares: Int?
    public var nominalShares: Int?
    public var maximumShares: Int?
    public var marketPrice: [GetProductsMarketPrice]?
    public var charges: [GetProductsCharges]?
    public var allowDividendCalculationForInactiveClients: Bool?
    public var lockinPeriod: Int?
    public var lockPeriodTypeEnum: GetLockPeriodTypeEnum?
    public var minimumActivePeriod: Int?
    public var minimumActivePeriodForDividendsTypeEnum: GetLockPeriodTypeEnum?
    public var accountingRule: GetProductsAccountingRule?
    public var accountingMappings: GetProductsAccountingMappings?
    public var currencyOptions: [GetChargesCurrency]?
    public var chargeOptions: [GetProductsCharges]?
    public var minimumActivePeriodFrequencyTypeOptions: [GetProductsMinimumActivePeriodFrequencyTypeOptions]?
    public var lockinPeriodFrequencyTypeOptions: [GetProductsMinimumActivePeriodFrequencyTypeOptions]?
    public var accountingMappingOptions: GetProductsAccountingMappingOptions?

    public init(_id: Int?, name: String?, shortName: String?, _description: String?, currency: GetProductsCurrency?, totalShares: Int?, totalSharesIssued: Int?, unitPrice: Int?, shareCapital: Int?, minimumShares: Int?, nominalShares: Int?, maximumShares: Int?, marketPrice: [GetProductsMarketPrice]?, charges: [GetProductsCharges]?, allowDividendCalculationForInactiveClients: Bool?, lockinPeriod: Int?, lockPeriodTypeEnum: GetLockPeriodTypeEnum?, minimumActivePeriod: Int?, minimumActivePeriodForDividendsTypeEnum: GetLockPeriodTypeEnum?, accountingRule: GetProductsAccountingRule?, accountingMappings: GetProductsAccountingMappings?, currencyOptions: [GetChargesCurrency]?, chargeOptions: [GetProductsCharges]?, minimumActivePeriodFrequencyTypeOptions: [GetProductsMinimumActivePeriodFrequencyTypeOptions]?, lockinPeriodFrequencyTypeOptions: [GetProductsMinimumActivePeriodFrequencyTypeOptions]?, accountingMappingOptions: GetProductsAccountingMappingOptions?) {
        self._id = _id
        self.name = name
        self.shortName = shortName
        self._description = _description
        self.currency = currency
        self.totalShares = totalShares
        self.totalSharesIssued = totalSharesIssued
        self.unitPrice = unitPrice
        self.shareCapital = shareCapital
        self.minimumShares = minimumShares
        self.nominalShares = nominalShares
        self.maximumShares = maximumShares
        self.marketPrice = marketPrice
        self.charges = charges
        self.allowDividendCalculationForInactiveClients = allowDividendCalculationForInactiveClients
        self.lockinPeriod = lockinPeriod
        self.lockPeriodTypeEnum = lockPeriodTypeEnum
        self.minimumActivePeriod = minimumActivePeriod
        self.minimumActivePeriodForDividendsTypeEnum = minimumActivePeriodForDividendsTypeEnum
        self.accountingRule = accountingRule
        self.accountingMappings = accountingMappings
        self.currencyOptions = currencyOptions
        self.chargeOptions = chargeOptions
        self.minimumActivePeriodFrequencyTypeOptions = minimumActivePeriodFrequencyTypeOptions
        self.lockinPeriodFrequencyTypeOptions = lockinPeriodFrequencyTypeOptions
        self.accountingMappingOptions = accountingMappingOptions
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case name
        case shortName
        case _description = "description"
        case currency
        case totalShares
        case totalSharesIssued
        case unitPrice
        case shareCapital
        case minimumShares
        case nominalShares
        case maximumShares
        case marketPrice
        case charges
        case allowDividendCalculationForInactiveClients
        case lockinPeriod
        case lockPeriodTypeEnum
        case minimumActivePeriod
        case minimumActivePeriodForDividendsTypeEnum
        case accountingRule
        case accountingMappings
        case currencyOptions
        case chargeOptions
        case minimumActivePeriodFrequencyTypeOptions
        case lockinPeriodFrequencyTypeOptions
        case accountingMappingOptions
    }


}

