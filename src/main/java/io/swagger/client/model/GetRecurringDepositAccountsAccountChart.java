/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.GetRecurringDepositAccountsChartSlabs;
import io.swagger.client.model.GetRecurringDepositAccountsPeriodTypes;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;

/**
 * GetRecurringDepositAccountsAccountChart
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:34:25.795+01:00")
public class GetRecurringDepositAccountsAccountChart {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("fromDate")
  private LocalDate fromDate = null;

  @SerializedName("accountId")
  private Integer accountId = null;

  @SerializedName("accountNumber")
  private Long accountNumber = null;

  @SerializedName("chartSlabs")
  private List<GetRecurringDepositAccountsChartSlabs> chartSlabs = null;

  @SerializedName("periodTypes")
  private List<GetRecurringDepositAccountsPeriodTypes> periodTypes = null;

  public GetRecurringDepositAccountsAccountChart id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "4", value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GetRecurringDepositAccountsAccountChart fromDate(LocalDate fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @ApiModelProperty(example = "[2013, 10, 2]", value = "")
  public LocalDate getFromDate() {
    return fromDate;
  }

  public void setFromDate(LocalDate fromDate) {
    this.fromDate = fromDate;
  }

  public GetRecurringDepositAccountsAccountChart accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(example = "5", value = "")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public GetRecurringDepositAccountsAccountChart accountNumber(Long accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(example = "RD000023", value = "")
  public Long getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(Long accountNumber) {
    this.accountNumber = accountNumber;
  }

  public GetRecurringDepositAccountsAccountChart chartSlabs(List<GetRecurringDepositAccountsChartSlabs> chartSlabs) {
    this.chartSlabs = chartSlabs;
    return this;
  }

  public GetRecurringDepositAccountsAccountChart addChartSlabsItem(GetRecurringDepositAccountsChartSlabs chartSlabsItem) {
    if (this.chartSlabs == null) {
      this.chartSlabs = new ArrayList<GetRecurringDepositAccountsChartSlabs>();
    }
    this.chartSlabs.add(chartSlabsItem);
    return this;
  }

   /**
   * Get chartSlabs
   * @return chartSlabs
  **/
  @ApiModelProperty(value = "")
  public List<GetRecurringDepositAccountsChartSlabs> getChartSlabs() {
    return chartSlabs;
  }

  public void setChartSlabs(List<GetRecurringDepositAccountsChartSlabs> chartSlabs) {
    this.chartSlabs = chartSlabs;
  }

  public GetRecurringDepositAccountsAccountChart periodTypes(List<GetRecurringDepositAccountsPeriodTypes> periodTypes) {
    this.periodTypes = periodTypes;
    return this;
  }

  public GetRecurringDepositAccountsAccountChart addPeriodTypesItem(GetRecurringDepositAccountsPeriodTypes periodTypesItem) {
    if (this.periodTypes == null) {
      this.periodTypes = new ArrayList<GetRecurringDepositAccountsPeriodTypes>();
    }
    this.periodTypes.add(periodTypesItem);
    return this;
  }

   /**
   * Get periodTypes
   * @return periodTypes
  **/
  @ApiModelProperty(value = "")
  public List<GetRecurringDepositAccountsPeriodTypes> getPeriodTypes() {
    return periodTypes;
  }

  public void setPeriodTypes(List<GetRecurringDepositAccountsPeriodTypes> periodTypes) {
    this.periodTypes = periodTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRecurringDepositAccountsAccountChart getRecurringDepositAccountsAccountChart = (GetRecurringDepositAccountsAccountChart) o;
    return Objects.equals(this.id, getRecurringDepositAccountsAccountChart.id) &&
        Objects.equals(this.fromDate, getRecurringDepositAccountsAccountChart.fromDate) &&
        Objects.equals(this.accountId, getRecurringDepositAccountsAccountChart.accountId) &&
        Objects.equals(this.accountNumber, getRecurringDepositAccountsAccountChart.accountNumber) &&
        Objects.equals(this.chartSlabs, getRecurringDepositAccountsAccountChart.chartSlabs) &&
        Objects.equals(this.periodTypes, getRecurringDepositAccountsAccountChart.periodTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fromDate, accountId, accountNumber, chartSlabs, periodTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRecurringDepositAccountsAccountChart {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    chartSlabs: ").append(toIndentedString(chartSlabs)).append("\n");
    sb.append("    periodTypes: ").append(toIndentedString(periodTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

