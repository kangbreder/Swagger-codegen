/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * PostAdhocQuerySearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:34:25.795+01:00")
public class PostAdhocQuerySearchRequest {
  @SerializedName("locale")
  private String locale = null;

  @SerializedName("dateFormat")
  private String dateFormat = null;

  @SerializedName("loanDateOption")
  private String loanDateOption = null;

  @SerializedName("loanFromDate")
  private LocalDate loanFromDate = null;

  @SerializedName("loanToDate")
  private LocalDate loanToDate = null;

  @SerializedName("includeOutStandingAmountPercentage")
  private Boolean includeOutStandingAmountPercentage = null;

  @SerializedName("outStandingAmountPercentageCondition")
  private String outStandingAmountPercentageCondition = null;

  @SerializedName("outStandingAmountPercentage")
  private Long outStandingAmountPercentage = null;

  @SerializedName("includeOutstandingAmount")
  private Boolean includeOutstandingAmount = null;

  @SerializedName("outstandingAmountCondition")
  private String outstandingAmountCondition = null;

  @SerializedName("minOutstandingAmount")
  private Long minOutstandingAmount = null;

  @SerializedName("maxOutstandingAmount")
  private Long maxOutstandingAmount = null;

  public PostAdhocQuerySearchRequest locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(example = "en", value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public PostAdhocQuerySearchRequest dateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @ApiModelProperty(example = "dd MMMM yyyy", value = "")
  public String getDateFormat() {
    return dateFormat;
  }

  public void setDateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
  }

  public PostAdhocQuerySearchRequest loanDateOption(String loanDateOption) {
    this.loanDateOption = loanDateOption;
    return this;
  }

   /**
   * Get loanDateOption
   * @return loanDateOption
  **/
  @ApiModelProperty(example = "approvalDate", value = "")
  public String getLoanDateOption() {
    return loanDateOption;
  }

  public void setLoanDateOption(String loanDateOption) {
    this.loanDateOption = loanDateOption;
  }

  public PostAdhocQuerySearchRequest loanFromDate(LocalDate loanFromDate) {
    this.loanFromDate = loanFromDate;
    return this;
  }

   /**
   * Get loanFromDate
   * @return loanFromDate
  **/
  @ApiModelProperty(example = "2013-01-01", value = "")
  public LocalDate getLoanFromDate() {
    return loanFromDate;
  }

  public void setLoanFromDate(LocalDate loanFromDate) {
    this.loanFromDate = loanFromDate;
  }

  public PostAdhocQuerySearchRequest loanToDate(LocalDate loanToDate) {
    this.loanToDate = loanToDate;
    return this;
  }

   /**
   * Get loanToDate
   * @return loanToDate
  **/
  @ApiModelProperty(example = "2014-01-27", value = "")
  public LocalDate getLoanToDate() {
    return loanToDate;
  }

  public void setLoanToDate(LocalDate loanToDate) {
    this.loanToDate = loanToDate;
  }

  public PostAdhocQuerySearchRequest includeOutStandingAmountPercentage(Boolean includeOutStandingAmountPercentage) {
    this.includeOutStandingAmountPercentage = includeOutStandingAmountPercentage;
    return this;
  }

   /**
   * Get includeOutStandingAmountPercentage
   * @return includeOutStandingAmountPercentage
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isIncludeOutStandingAmountPercentage() {
    return includeOutStandingAmountPercentage;
  }

  public void setIncludeOutStandingAmountPercentage(Boolean includeOutStandingAmountPercentage) {
    this.includeOutStandingAmountPercentage = includeOutStandingAmountPercentage;
  }

  public PostAdhocQuerySearchRequest outStandingAmountPercentageCondition(String outStandingAmountPercentageCondition) {
    this.outStandingAmountPercentageCondition = outStandingAmountPercentageCondition;
    return this;
  }

   /**
   * Get outStandingAmountPercentageCondition
   * @return outStandingAmountPercentageCondition
  **/
  @ApiModelProperty(example = "<=", value = "")
  public String getOutStandingAmountPercentageCondition() {
    return outStandingAmountPercentageCondition;
  }

  public void setOutStandingAmountPercentageCondition(String outStandingAmountPercentageCondition) {
    this.outStandingAmountPercentageCondition = outStandingAmountPercentageCondition;
  }

  public PostAdhocQuerySearchRequest outStandingAmountPercentage(Long outStandingAmountPercentage) {
    this.outStandingAmountPercentage = outStandingAmountPercentage;
    return this;
  }

   /**
   * Get outStandingAmountPercentage
   * @return outStandingAmountPercentage
  **/
  @ApiModelProperty(example = "80", value = "")
  public Long getOutStandingAmountPercentage() {
    return outStandingAmountPercentage;
  }

  public void setOutStandingAmountPercentage(Long outStandingAmountPercentage) {
    this.outStandingAmountPercentage = outStandingAmountPercentage;
  }

  public PostAdhocQuerySearchRequest includeOutstandingAmount(Boolean includeOutstandingAmount) {
    this.includeOutstandingAmount = includeOutstandingAmount;
    return this;
  }

   /**
   * Get includeOutstandingAmount
   * @return includeOutstandingAmount
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isIncludeOutstandingAmount() {
    return includeOutstandingAmount;
  }

  public void setIncludeOutstandingAmount(Boolean includeOutstandingAmount) {
    this.includeOutstandingAmount = includeOutstandingAmount;
  }

  public PostAdhocQuerySearchRequest outstandingAmountCondition(String outstandingAmountCondition) {
    this.outstandingAmountCondition = outstandingAmountCondition;
    return this;
  }

   /**
   * Get outstandingAmountCondition
   * @return outstandingAmountCondition
  **/
  @ApiModelProperty(example = "between", value = "")
  public String getOutstandingAmountCondition() {
    return outstandingAmountCondition;
  }

  public void setOutstandingAmountCondition(String outstandingAmountCondition) {
    this.outstandingAmountCondition = outstandingAmountCondition;
  }

  public PostAdhocQuerySearchRequest minOutstandingAmount(Long minOutstandingAmount) {
    this.minOutstandingAmount = minOutstandingAmount;
    return this;
  }

   /**
   * Get minOutstandingAmount
   * @return minOutstandingAmount
  **/
  @ApiModelProperty(example = "100", value = "")
  public Long getMinOutstandingAmount() {
    return minOutstandingAmount;
  }

  public void setMinOutstandingAmount(Long minOutstandingAmount) {
    this.minOutstandingAmount = minOutstandingAmount;
  }

  public PostAdhocQuerySearchRequest maxOutstandingAmount(Long maxOutstandingAmount) {
    this.maxOutstandingAmount = maxOutstandingAmount;
    return this;
  }

   /**
   * Get maxOutstandingAmount
   * @return maxOutstandingAmount
  **/
  @ApiModelProperty(example = "10000", value = "")
  public Long getMaxOutstandingAmount() {
    return maxOutstandingAmount;
  }

  public void setMaxOutstandingAmount(Long maxOutstandingAmount) {
    this.maxOutstandingAmount = maxOutstandingAmount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostAdhocQuerySearchRequest postAdhocQuerySearchRequest = (PostAdhocQuerySearchRequest) o;
    return Objects.equals(this.locale, postAdhocQuerySearchRequest.locale) &&
        Objects.equals(this.dateFormat, postAdhocQuerySearchRequest.dateFormat) &&
        Objects.equals(this.loanDateOption, postAdhocQuerySearchRequest.loanDateOption) &&
        Objects.equals(this.loanFromDate, postAdhocQuerySearchRequest.loanFromDate) &&
        Objects.equals(this.loanToDate, postAdhocQuerySearchRequest.loanToDate) &&
        Objects.equals(this.includeOutStandingAmountPercentage, postAdhocQuerySearchRequest.includeOutStandingAmountPercentage) &&
        Objects.equals(this.outStandingAmountPercentageCondition, postAdhocQuerySearchRequest.outStandingAmountPercentageCondition) &&
        Objects.equals(this.outStandingAmountPercentage, postAdhocQuerySearchRequest.outStandingAmountPercentage) &&
        Objects.equals(this.includeOutstandingAmount, postAdhocQuerySearchRequest.includeOutstandingAmount) &&
        Objects.equals(this.outstandingAmountCondition, postAdhocQuerySearchRequest.outstandingAmountCondition) &&
        Objects.equals(this.minOutstandingAmount, postAdhocQuerySearchRequest.minOutstandingAmount) &&
        Objects.equals(this.maxOutstandingAmount, postAdhocQuerySearchRequest.maxOutstandingAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locale, dateFormat, loanDateOption, loanFromDate, loanToDate, includeOutStandingAmountPercentage, outStandingAmountPercentageCondition, outStandingAmountPercentage, includeOutstandingAmount, outstandingAmountCondition, minOutstandingAmount, maxOutstandingAmount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostAdhocQuerySearchRequest {\n");
    
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    loanDateOption: ").append(toIndentedString(loanDateOption)).append("\n");
    sb.append("    loanFromDate: ").append(toIndentedString(loanFromDate)).append("\n");
    sb.append("    loanToDate: ").append(toIndentedString(loanToDate)).append("\n");
    sb.append("    includeOutStandingAmountPercentage: ").append(toIndentedString(includeOutStandingAmountPercentage)).append("\n");
    sb.append("    outStandingAmountPercentageCondition: ").append(toIndentedString(outStandingAmountPercentageCondition)).append("\n");
    sb.append("    outStandingAmountPercentage: ").append(toIndentedString(outStandingAmountPercentage)).append("\n");
    sb.append("    includeOutstandingAmount: ").append(toIndentedString(includeOutstandingAmount)).append("\n");
    sb.append("    outstandingAmountCondition: ").append(toIndentedString(outstandingAmountCondition)).append("\n");
    sb.append("    minOutstandingAmount: ").append(toIndentedString(minOutstandingAmount)).append("\n");
    sb.append("    maxOutstandingAmount: ").append(toIndentedString(maxOutstandingAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

