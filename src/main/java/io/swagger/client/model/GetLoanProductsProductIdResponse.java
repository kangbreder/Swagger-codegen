/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.GetLoanAccountingMappings;
import io.swagger.client.model.GetLoanFeeToIncomeAccountMappings;
import io.swagger.client.model.GetLoanPaymentChannelToFundSourceMappings;
import io.swagger.client.model.GetLoanProductsAccountingRule;
import io.swagger.client.model.GetLoanProductsAmortizationType;
import io.swagger.client.model.GetLoanProductsCurrency;
import io.swagger.client.model.GetLoanProductsInterestRateFrequencyType;
import io.swagger.client.model.GetLoanProductsInterestTemplateType;
import io.swagger.client.model.GetLoanProductsPrincipalVariationsForBorrowerCycle;
import io.swagger.client.model.GetLoanProductsRepaymentFrequencyType;
import io.swagger.client.model.GetLoansProductsInterestCalculationPeriodType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * GetLoanProductsProductIdResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:34:25.795+01:00")
public class GetLoanProductsProductIdResponse {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("shortName")
  private String shortName = null;

  @SerializedName("includeInBorrowerCycle")
  private Boolean includeInBorrowerCycle = null;

  @SerializedName("useBorrowerCycle")
  private Boolean useBorrowerCycle = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("currency")
  private GetLoanProductsCurrency currency = null;

  @SerializedName("principal")
  private Float principal = null;

  @SerializedName("minPrincipal")
  private Float minPrincipal = null;

  @SerializedName("maxPrincipal")
  private Float maxPrincipal = null;

  @SerializedName("numberOfRepayments")
  private Integer numberOfRepayments = null;

  @SerializedName("repaymentEvery")
  private Integer repaymentEvery = null;

  @SerializedName("repaymentFrequencyType")
  private GetLoanProductsRepaymentFrequencyType repaymentFrequencyType = null;

  @SerializedName("interestRatePerPeriod")
  private Float interestRatePerPeriod = null;

  @SerializedName("interestRateFrequencyType")
  private GetLoanProductsInterestRateFrequencyType interestRateFrequencyType = null;

  @SerializedName("annualInterestRate")
  private Float annualInterestRate = null;

  @SerializedName("amortizationType")
  private GetLoanProductsAmortizationType amortizationType = null;

  @SerializedName("interestType")
  private GetLoanProductsInterestTemplateType interestType = null;

  @SerializedName("interestCalculationPeriodType")
  private GetLoansProductsInterestCalculationPeriodType interestCalculationPeriodType = null;

  @SerializedName("transactionProcessingStrategyId")
  private Integer transactionProcessingStrategyId = null;

  @SerializedName("transactionProcessingStrategyName")
  private String transactionProcessingStrategyName = null;

  @SerializedName("charges")
  private List<Integer> charges = null;

  @SerializedName("productsPrincipalVariationsForBorrowerCycle")
  private List<GetLoanProductsPrincipalVariationsForBorrowerCycle> productsPrincipalVariationsForBorrowerCycle = null;

  @SerializedName("interestRateVariationsForBorrowerCycle")
  private List<Integer> interestRateVariationsForBorrowerCycle = null;

  @SerializedName("numberOfRepaymentVariationsForBorrowerCycle")
  private List<Integer> numberOfRepaymentVariationsForBorrowerCycle = null;

  @SerializedName("accountingRule")
  private GetLoanProductsAccountingRule accountingRule = null;

  @SerializedName("accountingMappings")
  private GetLoanAccountingMappings accountingMappings = null;

  @SerializedName("paymentChannelToFundSourceMappings")
  private List<GetLoanPaymentChannelToFundSourceMappings> paymentChannelToFundSourceMappings = null;

  @SerializedName("feeToIncomeAccountMappings")
  private List<GetLoanFeeToIncomeAccountMappings> feeToIncomeAccountMappings = null;

  @SerializedName("multiDisburseLoan")
  private Boolean multiDisburseLoan = null;

  @SerializedName("maxTrancheCount")
  private Integer maxTrancheCount = null;

  @SerializedName("outstandingLoanBalance")
  private Float outstandingLoanBalance = null;

  @SerializedName("overdueDaysForNPA")
  private Integer overdueDaysForNPA = null;

  @SerializedName("principalThresholdForLastInstalment")
  private Integer principalThresholdForLastInstalment = null;

  public GetLoanProductsProductIdResponse id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "11", value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GetLoanProductsProductIdResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "advanced accounting", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GetLoanProductsProductIdResponse shortName(String shortName) {
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @ApiModelProperty(example = "ad11", value = "")
  public String getShortName() {
    return shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = shortName;
  }

  public GetLoanProductsProductIdResponse includeInBorrowerCycle(Boolean includeInBorrowerCycle) {
    this.includeInBorrowerCycle = includeInBorrowerCycle;
    return this;
  }

   /**
   * Get includeInBorrowerCycle
   * @return includeInBorrowerCycle
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isIncludeInBorrowerCycle() {
    return includeInBorrowerCycle;
  }

  public void setIncludeInBorrowerCycle(Boolean includeInBorrowerCycle) {
    this.includeInBorrowerCycle = includeInBorrowerCycle;
  }

  public GetLoanProductsProductIdResponse useBorrowerCycle(Boolean useBorrowerCycle) {
    this.useBorrowerCycle = useBorrowerCycle;
    return this;
  }

   /**
   * Get useBorrowerCycle
   * @return useBorrowerCycle
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isUseBorrowerCycle() {
    return useBorrowerCycle;
  }

  public void setUseBorrowerCycle(Boolean useBorrowerCycle) {
    this.useBorrowerCycle = useBorrowerCycle;
  }

  public GetLoanProductsProductIdResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "loanProduct.active", value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public GetLoanProductsProductIdResponse currency(GetLoanProductsCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(GetLoanProductsCurrency currency) {
    this.currency = currency;
  }

  public GetLoanProductsProductIdResponse principal(Float principal) {
    this.principal = principal;
    return this;
  }

   /**
   * Get principal
   * @return principal
  **/
  @ApiModelProperty(example = "10000.0", value = "")
  public Float getPrincipal() {
    return principal;
  }

  public void setPrincipal(Float principal) {
    this.principal = principal;
  }

  public GetLoanProductsProductIdResponse minPrincipal(Float minPrincipal) {
    this.minPrincipal = minPrincipal;
    return this;
  }

   /**
   * Get minPrincipal
   * @return minPrincipal
  **/
  @ApiModelProperty(example = "2000.0", value = "")
  public Float getMinPrincipal() {
    return minPrincipal;
  }

  public void setMinPrincipal(Float minPrincipal) {
    this.minPrincipal = minPrincipal;
  }

  public GetLoanProductsProductIdResponse maxPrincipal(Float maxPrincipal) {
    this.maxPrincipal = maxPrincipal;
    return this;
  }

   /**
   * Get maxPrincipal
   * @return maxPrincipal
  **/
  @ApiModelProperty(example = "15000.0", value = "")
  public Float getMaxPrincipal() {
    return maxPrincipal;
  }

  public void setMaxPrincipal(Float maxPrincipal) {
    this.maxPrincipal = maxPrincipal;
  }

  public GetLoanProductsProductIdResponse numberOfRepayments(Integer numberOfRepayments) {
    this.numberOfRepayments = numberOfRepayments;
    return this;
  }

   /**
   * Get numberOfRepayments
   * @return numberOfRepayments
  **/
  @ApiModelProperty(example = "7", value = "")
  public Integer getNumberOfRepayments() {
    return numberOfRepayments;
  }

  public void setNumberOfRepayments(Integer numberOfRepayments) {
    this.numberOfRepayments = numberOfRepayments;
  }

  public GetLoanProductsProductIdResponse repaymentEvery(Integer repaymentEvery) {
    this.repaymentEvery = repaymentEvery;
    return this;
  }

   /**
   * Get repaymentEvery
   * @return repaymentEvery
  **/
  @ApiModelProperty(example = "7", value = "")
  public Integer getRepaymentEvery() {
    return repaymentEvery;
  }

  public void setRepaymentEvery(Integer repaymentEvery) {
    this.repaymentEvery = repaymentEvery;
  }

  public GetLoanProductsProductIdResponse repaymentFrequencyType(GetLoanProductsRepaymentFrequencyType repaymentFrequencyType) {
    this.repaymentFrequencyType = repaymentFrequencyType;
    return this;
  }

   /**
   * Get repaymentFrequencyType
   * @return repaymentFrequencyType
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsRepaymentFrequencyType getRepaymentFrequencyType() {
    return repaymentFrequencyType;
  }

  public void setRepaymentFrequencyType(GetLoanProductsRepaymentFrequencyType repaymentFrequencyType) {
    this.repaymentFrequencyType = repaymentFrequencyType;
  }

  public GetLoanProductsProductIdResponse interestRatePerPeriod(Float interestRatePerPeriod) {
    this.interestRatePerPeriod = interestRatePerPeriod;
    return this;
  }

   /**
   * Get interestRatePerPeriod
   * @return interestRatePerPeriod
  **/
  @ApiModelProperty(example = "5.0", value = "")
  public Float getInterestRatePerPeriod() {
    return interestRatePerPeriod;
  }

  public void setInterestRatePerPeriod(Float interestRatePerPeriod) {
    this.interestRatePerPeriod = interestRatePerPeriod;
  }

  public GetLoanProductsProductIdResponse interestRateFrequencyType(GetLoanProductsInterestRateFrequencyType interestRateFrequencyType) {
    this.interestRateFrequencyType = interestRateFrequencyType;
    return this;
  }

   /**
   * Get interestRateFrequencyType
   * @return interestRateFrequencyType
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsInterestRateFrequencyType getInterestRateFrequencyType() {
    return interestRateFrequencyType;
  }

  public void setInterestRateFrequencyType(GetLoanProductsInterestRateFrequencyType interestRateFrequencyType) {
    this.interestRateFrequencyType = interestRateFrequencyType;
  }

  public GetLoanProductsProductIdResponse annualInterestRate(Float annualInterestRate) {
    this.annualInterestRate = annualInterestRate;
    return this;
  }

   /**
   * Get annualInterestRate
   * @return annualInterestRate
  **/
  @ApiModelProperty(example = "60.0", value = "")
  public Float getAnnualInterestRate() {
    return annualInterestRate;
  }

  public void setAnnualInterestRate(Float annualInterestRate) {
    this.annualInterestRate = annualInterestRate;
  }

  public GetLoanProductsProductIdResponse amortizationType(GetLoanProductsAmortizationType amortizationType) {
    this.amortizationType = amortizationType;
    return this;
  }

   /**
   * Get amortizationType
   * @return amortizationType
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsAmortizationType getAmortizationType() {
    return amortizationType;
  }

  public void setAmortizationType(GetLoanProductsAmortizationType amortizationType) {
    this.amortizationType = amortizationType;
  }

  public GetLoanProductsProductIdResponse interestType(GetLoanProductsInterestTemplateType interestType) {
    this.interestType = interestType;
    return this;
  }

   /**
   * Get interestType
   * @return interestType
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsInterestTemplateType getInterestType() {
    return interestType;
  }

  public void setInterestType(GetLoanProductsInterestTemplateType interestType) {
    this.interestType = interestType;
  }

  public GetLoanProductsProductIdResponse interestCalculationPeriodType(GetLoansProductsInterestCalculationPeriodType interestCalculationPeriodType) {
    this.interestCalculationPeriodType = interestCalculationPeriodType;
    return this;
  }

   /**
   * Get interestCalculationPeriodType
   * @return interestCalculationPeriodType
  **/
  @ApiModelProperty(value = "")
  public GetLoansProductsInterestCalculationPeriodType getInterestCalculationPeriodType() {
    return interestCalculationPeriodType;
  }

  public void setInterestCalculationPeriodType(GetLoansProductsInterestCalculationPeriodType interestCalculationPeriodType) {
    this.interestCalculationPeriodType = interestCalculationPeriodType;
  }

  public GetLoanProductsProductIdResponse transactionProcessingStrategyId(Integer transactionProcessingStrategyId) {
    this.transactionProcessingStrategyId = transactionProcessingStrategyId;
    return this;
  }

   /**
   * Get transactionProcessingStrategyId
   * @return transactionProcessingStrategyId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getTransactionProcessingStrategyId() {
    return transactionProcessingStrategyId;
  }

  public void setTransactionProcessingStrategyId(Integer transactionProcessingStrategyId) {
    this.transactionProcessingStrategyId = transactionProcessingStrategyId;
  }

  public GetLoanProductsProductIdResponse transactionProcessingStrategyName(String transactionProcessingStrategyName) {
    this.transactionProcessingStrategyName = transactionProcessingStrategyName;
    return this;
  }

   /**
   * Get transactionProcessingStrategyName
   * @return transactionProcessingStrategyName
  **/
  @ApiModelProperty(example = "Mifos style", value = "")
  public String getTransactionProcessingStrategyName() {
    return transactionProcessingStrategyName;
  }

  public void setTransactionProcessingStrategyName(String transactionProcessingStrategyName) {
    this.transactionProcessingStrategyName = transactionProcessingStrategyName;
  }

  public GetLoanProductsProductIdResponse charges(List<Integer> charges) {
    this.charges = charges;
    return this;
  }

  public GetLoanProductsProductIdResponse addChargesItem(Integer chargesItem) {
    if (this.charges == null) {
      this.charges = new ArrayList<Integer>();
    }
    this.charges.add(chargesItem);
    return this;
  }

   /**
   * Get charges
   * @return charges
  **/
  @ApiModelProperty(example = "\"[]\"", value = "")
  public List<Integer> getCharges() {
    return charges;
  }

  public void setCharges(List<Integer> charges) {
    this.charges = charges;
  }

  public GetLoanProductsProductIdResponse productsPrincipalVariationsForBorrowerCycle(List<GetLoanProductsPrincipalVariationsForBorrowerCycle> productsPrincipalVariationsForBorrowerCycle) {
    this.productsPrincipalVariationsForBorrowerCycle = productsPrincipalVariationsForBorrowerCycle;
    return this;
  }

  public GetLoanProductsProductIdResponse addProductsPrincipalVariationsForBorrowerCycleItem(GetLoanProductsPrincipalVariationsForBorrowerCycle productsPrincipalVariationsForBorrowerCycleItem) {
    if (this.productsPrincipalVariationsForBorrowerCycle == null) {
      this.productsPrincipalVariationsForBorrowerCycle = new ArrayList<GetLoanProductsPrincipalVariationsForBorrowerCycle>();
    }
    this.productsPrincipalVariationsForBorrowerCycle.add(productsPrincipalVariationsForBorrowerCycleItem);
    return this;
  }

   /**
   * Get productsPrincipalVariationsForBorrowerCycle
   * @return productsPrincipalVariationsForBorrowerCycle
  **/
  @ApiModelProperty(value = "")
  public List<GetLoanProductsPrincipalVariationsForBorrowerCycle> getProductsPrincipalVariationsForBorrowerCycle() {
    return productsPrincipalVariationsForBorrowerCycle;
  }

  public void setProductsPrincipalVariationsForBorrowerCycle(List<GetLoanProductsPrincipalVariationsForBorrowerCycle> productsPrincipalVariationsForBorrowerCycle) {
    this.productsPrincipalVariationsForBorrowerCycle = productsPrincipalVariationsForBorrowerCycle;
  }

  public GetLoanProductsProductIdResponse interestRateVariationsForBorrowerCycle(List<Integer> interestRateVariationsForBorrowerCycle) {
    this.interestRateVariationsForBorrowerCycle = interestRateVariationsForBorrowerCycle;
    return this;
  }

  public GetLoanProductsProductIdResponse addInterestRateVariationsForBorrowerCycleItem(Integer interestRateVariationsForBorrowerCycleItem) {
    if (this.interestRateVariationsForBorrowerCycle == null) {
      this.interestRateVariationsForBorrowerCycle = new ArrayList<Integer>();
    }
    this.interestRateVariationsForBorrowerCycle.add(interestRateVariationsForBorrowerCycleItem);
    return this;
  }

   /**
   * Get interestRateVariationsForBorrowerCycle
   * @return interestRateVariationsForBorrowerCycle
  **/
  @ApiModelProperty(example = "\"[]\"", value = "")
  public List<Integer> getInterestRateVariationsForBorrowerCycle() {
    return interestRateVariationsForBorrowerCycle;
  }

  public void setInterestRateVariationsForBorrowerCycle(List<Integer> interestRateVariationsForBorrowerCycle) {
    this.interestRateVariationsForBorrowerCycle = interestRateVariationsForBorrowerCycle;
  }

  public GetLoanProductsProductIdResponse numberOfRepaymentVariationsForBorrowerCycle(List<Integer> numberOfRepaymentVariationsForBorrowerCycle) {
    this.numberOfRepaymentVariationsForBorrowerCycle = numberOfRepaymentVariationsForBorrowerCycle;
    return this;
  }

  public GetLoanProductsProductIdResponse addNumberOfRepaymentVariationsForBorrowerCycleItem(Integer numberOfRepaymentVariationsForBorrowerCycleItem) {
    if (this.numberOfRepaymentVariationsForBorrowerCycle == null) {
      this.numberOfRepaymentVariationsForBorrowerCycle = new ArrayList<Integer>();
    }
    this.numberOfRepaymentVariationsForBorrowerCycle.add(numberOfRepaymentVariationsForBorrowerCycleItem);
    return this;
  }

   /**
   * Get numberOfRepaymentVariationsForBorrowerCycle
   * @return numberOfRepaymentVariationsForBorrowerCycle
  **/
  @ApiModelProperty(example = "\"[]\"", value = "")
  public List<Integer> getNumberOfRepaymentVariationsForBorrowerCycle() {
    return numberOfRepaymentVariationsForBorrowerCycle;
  }

  public void setNumberOfRepaymentVariationsForBorrowerCycle(List<Integer> numberOfRepaymentVariationsForBorrowerCycle) {
    this.numberOfRepaymentVariationsForBorrowerCycle = numberOfRepaymentVariationsForBorrowerCycle;
  }

  public GetLoanProductsProductIdResponse accountingRule(GetLoanProductsAccountingRule accountingRule) {
    this.accountingRule = accountingRule;
    return this;
  }

   /**
   * Get accountingRule
   * @return accountingRule
  **/
  @ApiModelProperty(value = "")
  public GetLoanProductsAccountingRule getAccountingRule() {
    return accountingRule;
  }

  public void setAccountingRule(GetLoanProductsAccountingRule accountingRule) {
    this.accountingRule = accountingRule;
  }

  public GetLoanProductsProductIdResponse accountingMappings(GetLoanAccountingMappings accountingMappings) {
    this.accountingMappings = accountingMappings;
    return this;
  }

   /**
   * Get accountingMappings
   * @return accountingMappings
  **/
  @ApiModelProperty(value = "")
  public GetLoanAccountingMappings getAccountingMappings() {
    return accountingMappings;
  }

  public void setAccountingMappings(GetLoanAccountingMappings accountingMappings) {
    this.accountingMappings = accountingMappings;
  }

  public GetLoanProductsProductIdResponse paymentChannelToFundSourceMappings(List<GetLoanPaymentChannelToFundSourceMappings> paymentChannelToFundSourceMappings) {
    this.paymentChannelToFundSourceMappings = paymentChannelToFundSourceMappings;
    return this;
  }

  public GetLoanProductsProductIdResponse addPaymentChannelToFundSourceMappingsItem(GetLoanPaymentChannelToFundSourceMappings paymentChannelToFundSourceMappingsItem) {
    if (this.paymentChannelToFundSourceMappings == null) {
      this.paymentChannelToFundSourceMappings = new ArrayList<GetLoanPaymentChannelToFundSourceMappings>();
    }
    this.paymentChannelToFundSourceMappings.add(paymentChannelToFundSourceMappingsItem);
    return this;
  }

   /**
   * Get paymentChannelToFundSourceMappings
   * @return paymentChannelToFundSourceMappings
  **/
  @ApiModelProperty(value = "")
  public List<GetLoanPaymentChannelToFundSourceMappings> getPaymentChannelToFundSourceMappings() {
    return paymentChannelToFundSourceMappings;
  }

  public void setPaymentChannelToFundSourceMappings(List<GetLoanPaymentChannelToFundSourceMappings> paymentChannelToFundSourceMappings) {
    this.paymentChannelToFundSourceMappings = paymentChannelToFundSourceMappings;
  }

  public GetLoanProductsProductIdResponse feeToIncomeAccountMappings(List<GetLoanFeeToIncomeAccountMappings> feeToIncomeAccountMappings) {
    this.feeToIncomeAccountMappings = feeToIncomeAccountMappings;
    return this;
  }

  public GetLoanProductsProductIdResponse addFeeToIncomeAccountMappingsItem(GetLoanFeeToIncomeAccountMappings feeToIncomeAccountMappingsItem) {
    if (this.feeToIncomeAccountMappings == null) {
      this.feeToIncomeAccountMappings = new ArrayList<GetLoanFeeToIncomeAccountMappings>();
    }
    this.feeToIncomeAccountMappings.add(feeToIncomeAccountMappingsItem);
    return this;
  }

   /**
   * Get feeToIncomeAccountMappings
   * @return feeToIncomeAccountMappings
  **/
  @ApiModelProperty(value = "")
  public List<GetLoanFeeToIncomeAccountMappings> getFeeToIncomeAccountMappings() {
    return feeToIncomeAccountMappings;
  }

  public void setFeeToIncomeAccountMappings(List<GetLoanFeeToIncomeAccountMappings> feeToIncomeAccountMappings) {
    this.feeToIncomeAccountMappings = feeToIncomeAccountMappings;
  }

  public GetLoanProductsProductIdResponse multiDisburseLoan(Boolean multiDisburseLoan) {
    this.multiDisburseLoan = multiDisburseLoan;
    return this;
  }

   /**
   * Get multiDisburseLoan
   * @return multiDisburseLoan
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean isMultiDisburseLoan() {
    return multiDisburseLoan;
  }

  public void setMultiDisburseLoan(Boolean multiDisburseLoan) {
    this.multiDisburseLoan = multiDisburseLoan;
  }

  public GetLoanProductsProductIdResponse maxTrancheCount(Integer maxTrancheCount) {
    this.maxTrancheCount = maxTrancheCount;
    return this;
  }

   /**
   * Get maxTrancheCount
   * @return maxTrancheCount
  **/
  @ApiModelProperty(example = "3", value = "")
  public Integer getMaxTrancheCount() {
    return maxTrancheCount;
  }

  public void setMaxTrancheCount(Integer maxTrancheCount) {
    this.maxTrancheCount = maxTrancheCount;
  }

  public GetLoanProductsProductIdResponse outstandingLoanBalance(Float outstandingLoanBalance) {
    this.outstandingLoanBalance = outstandingLoanBalance;
    return this;
  }

   /**
   * Get outstandingLoanBalance
   * @return outstandingLoanBalance
  **/
  @ApiModelProperty(example = "36000.0", value = "")
  public Float getOutstandingLoanBalance() {
    return outstandingLoanBalance;
  }

  public void setOutstandingLoanBalance(Float outstandingLoanBalance) {
    this.outstandingLoanBalance = outstandingLoanBalance;
  }

  public GetLoanProductsProductIdResponse overdueDaysForNPA(Integer overdueDaysForNPA) {
    this.overdueDaysForNPA = overdueDaysForNPA;
    return this;
  }

   /**
   * Get overdueDaysForNPA
   * @return overdueDaysForNPA
  **/
  @ApiModelProperty(example = "2", value = "")
  public Integer getOverdueDaysForNPA() {
    return overdueDaysForNPA;
  }

  public void setOverdueDaysForNPA(Integer overdueDaysForNPA) {
    this.overdueDaysForNPA = overdueDaysForNPA;
  }

  public GetLoanProductsProductIdResponse principalThresholdForLastInstalment(Integer principalThresholdForLastInstalment) {
    this.principalThresholdForLastInstalment = principalThresholdForLastInstalment;
    return this;
  }

   /**
   * Get principalThresholdForLastInstalment
   * @return principalThresholdForLastInstalment
  **/
  @ApiModelProperty(example = "50", value = "")
  public Integer getPrincipalThresholdForLastInstalment() {
    return principalThresholdForLastInstalment;
  }

  public void setPrincipalThresholdForLastInstalment(Integer principalThresholdForLastInstalment) {
    this.principalThresholdForLastInstalment = principalThresholdForLastInstalment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetLoanProductsProductIdResponse getLoanProductsProductIdResponse = (GetLoanProductsProductIdResponse) o;
    return Objects.equals(this.id, getLoanProductsProductIdResponse.id) &&
        Objects.equals(this.name, getLoanProductsProductIdResponse.name) &&
        Objects.equals(this.shortName, getLoanProductsProductIdResponse.shortName) &&
        Objects.equals(this.includeInBorrowerCycle, getLoanProductsProductIdResponse.includeInBorrowerCycle) &&
        Objects.equals(this.useBorrowerCycle, getLoanProductsProductIdResponse.useBorrowerCycle) &&
        Objects.equals(this.status, getLoanProductsProductIdResponse.status) &&
        Objects.equals(this.currency, getLoanProductsProductIdResponse.currency) &&
        Objects.equals(this.principal, getLoanProductsProductIdResponse.principal) &&
        Objects.equals(this.minPrincipal, getLoanProductsProductIdResponse.minPrincipal) &&
        Objects.equals(this.maxPrincipal, getLoanProductsProductIdResponse.maxPrincipal) &&
        Objects.equals(this.numberOfRepayments, getLoanProductsProductIdResponse.numberOfRepayments) &&
        Objects.equals(this.repaymentEvery, getLoanProductsProductIdResponse.repaymentEvery) &&
        Objects.equals(this.repaymentFrequencyType, getLoanProductsProductIdResponse.repaymentFrequencyType) &&
        Objects.equals(this.interestRatePerPeriod, getLoanProductsProductIdResponse.interestRatePerPeriod) &&
        Objects.equals(this.interestRateFrequencyType, getLoanProductsProductIdResponse.interestRateFrequencyType) &&
        Objects.equals(this.annualInterestRate, getLoanProductsProductIdResponse.annualInterestRate) &&
        Objects.equals(this.amortizationType, getLoanProductsProductIdResponse.amortizationType) &&
        Objects.equals(this.interestType, getLoanProductsProductIdResponse.interestType) &&
        Objects.equals(this.interestCalculationPeriodType, getLoanProductsProductIdResponse.interestCalculationPeriodType) &&
        Objects.equals(this.transactionProcessingStrategyId, getLoanProductsProductIdResponse.transactionProcessingStrategyId) &&
        Objects.equals(this.transactionProcessingStrategyName, getLoanProductsProductIdResponse.transactionProcessingStrategyName) &&
        Objects.equals(this.charges, getLoanProductsProductIdResponse.charges) &&
        Objects.equals(this.productsPrincipalVariationsForBorrowerCycle, getLoanProductsProductIdResponse.productsPrincipalVariationsForBorrowerCycle) &&
        Objects.equals(this.interestRateVariationsForBorrowerCycle, getLoanProductsProductIdResponse.interestRateVariationsForBorrowerCycle) &&
        Objects.equals(this.numberOfRepaymentVariationsForBorrowerCycle, getLoanProductsProductIdResponse.numberOfRepaymentVariationsForBorrowerCycle) &&
        Objects.equals(this.accountingRule, getLoanProductsProductIdResponse.accountingRule) &&
        Objects.equals(this.accountingMappings, getLoanProductsProductIdResponse.accountingMappings) &&
        Objects.equals(this.paymentChannelToFundSourceMappings, getLoanProductsProductIdResponse.paymentChannelToFundSourceMappings) &&
        Objects.equals(this.feeToIncomeAccountMappings, getLoanProductsProductIdResponse.feeToIncomeAccountMappings) &&
        Objects.equals(this.multiDisburseLoan, getLoanProductsProductIdResponse.multiDisburseLoan) &&
        Objects.equals(this.maxTrancheCount, getLoanProductsProductIdResponse.maxTrancheCount) &&
        Objects.equals(this.outstandingLoanBalance, getLoanProductsProductIdResponse.outstandingLoanBalance) &&
        Objects.equals(this.overdueDaysForNPA, getLoanProductsProductIdResponse.overdueDaysForNPA) &&
        Objects.equals(this.principalThresholdForLastInstalment, getLoanProductsProductIdResponse.principalThresholdForLastInstalment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, shortName, includeInBorrowerCycle, useBorrowerCycle, status, currency, principal, minPrincipal, maxPrincipal, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, interestRateFrequencyType, annualInterestRate, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyId, transactionProcessingStrategyName, charges, productsPrincipalVariationsForBorrowerCycle, interestRateVariationsForBorrowerCycle, numberOfRepaymentVariationsForBorrowerCycle, accountingRule, accountingMappings, paymentChannelToFundSourceMappings, feeToIncomeAccountMappings, multiDisburseLoan, maxTrancheCount, outstandingLoanBalance, overdueDaysForNPA, principalThresholdForLastInstalment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetLoanProductsProductIdResponse {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    includeInBorrowerCycle: ").append(toIndentedString(includeInBorrowerCycle)).append("\n");
    sb.append("    useBorrowerCycle: ").append(toIndentedString(useBorrowerCycle)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("    minPrincipal: ").append(toIndentedString(minPrincipal)).append("\n");
    sb.append("    maxPrincipal: ").append(toIndentedString(maxPrincipal)).append("\n");
    sb.append("    numberOfRepayments: ").append(toIndentedString(numberOfRepayments)).append("\n");
    sb.append("    repaymentEvery: ").append(toIndentedString(repaymentEvery)).append("\n");
    sb.append("    repaymentFrequencyType: ").append(toIndentedString(repaymentFrequencyType)).append("\n");
    sb.append("    interestRatePerPeriod: ").append(toIndentedString(interestRatePerPeriod)).append("\n");
    sb.append("    interestRateFrequencyType: ").append(toIndentedString(interestRateFrequencyType)).append("\n");
    sb.append("    annualInterestRate: ").append(toIndentedString(annualInterestRate)).append("\n");
    sb.append("    amortizationType: ").append(toIndentedString(amortizationType)).append("\n");
    sb.append("    interestType: ").append(toIndentedString(interestType)).append("\n");
    sb.append("    interestCalculationPeriodType: ").append(toIndentedString(interestCalculationPeriodType)).append("\n");
    sb.append("    transactionProcessingStrategyId: ").append(toIndentedString(transactionProcessingStrategyId)).append("\n");
    sb.append("    transactionProcessingStrategyName: ").append(toIndentedString(transactionProcessingStrategyName)).append("\n");
    sb.append("    charges: ").append(toIndentedString(charges)).append("\n");
    sb.append("    productsPrincipalVariationsForBorrowerCycle: ").append(toIndentedString(productsPrincipalVariationsForBorrowerCycle)).append("\n");
    sb.append("    interestRateVariationsForBorrowerCycle: ").append(toIndentedString(interestRateVariationsForBorrowerCycle)).append("\n");
    sb.append("    numberOfRepaymentVariationsForBorrowerCycle: ").append(toIndentedString(numberOfRepaymentVariationsForBorrowerCycle)).append("\n");
    sb.append("    accountingRule: ").append(toIndentedString(accountingRule)).append("\n");
    sb.append("    accountingMappings: ").append(toIndentedString(accountingMappings)).append("\n");
    sb.append("    paymentChannelToFundSourceMappings: ").append(toIndentedString(paymentChannelToFundSourceMappings)).append("\n");
    sb.append("    feeToIncomeAccountMappings: ").append(toIndentedString(feeToIncomeAccountMappings)).append("\n");
    sb.append("    multiDisburseLoan: ").append(toIndentedString(multiDisburseLoan)).append("\n");
    sb.append("    maxTrancheCount: ").append(toIndentedString(maxTrancheCount)).append("\n");
    sb.append("    outstandingLoanBalance: ").append(toIndentedString(outstandingLoanBalance)).append("\n");
    sb.append("    overdueDaysForNPA: ").append(toIndentedString(overdueDaysForNPA)).append("\n");
    sb.append("    principalThresholdForLastInstalment: ").append(toIndentedString(principalThresholdForLastInstalment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

