/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:34:25.795+01:00")
public class PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest {
  @SerializedName("locale")
  private String locale = null;

  @SerializedName("dateFormat")
  private String dateFormat = null;

  @SerializedName("transactionDate")
  private String transactionDate = null;

  @SerializedName("transactionAmount")
  private Double transactionAmount = null;

  @SerializedName("paymentTypeId")
  private Integer paymentTypeId = null;

  @SerializedName("accountNumber")
  private String accountNumber = null;

  @SerializedName("checkNumber")
  private String checkNumber = null;

  @SerializedName("routingCode")
  private String routingCode = null;

  @SerializedName("receiptNumber")
  private String receiptNumber = null;

  @SerializedName("bankNumber")
  private String bankNumber = null;

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(example = "en", value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest dateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @ApiModelProperty(example = "dd MMMM yyyy", value = "")
  public String getDateFormat() {
    return dateFormat;
  }

  public void setDateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest transactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
    return this;
  }

   /**
   * Get transactionDate
   * @return transactionDate
  **/
  @ApiModelProperty(example = "27 May 2013", value = "")
  public String getTransactionDate() {
    return transactionDate;
  }

  public void setTransactionDate(String transactionDate) {
    this.transactionDate = transactionDate;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest transactionAmount(Double transactionAmount) {
    this.transactionAmount = transactionAmount;
    return this;
  }

   /**
   * Get transactionAmount
   * @return transactionAmount
  **/
  @ApiModelProperty(example = "500.0", value = "")
  public Double getTransactionAmount() {
    return transactionAmount;
  }

  public void setTransactionAmount(Double transactionAmount) {
    this.transactionAmount = transactionAmount;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest paymentTypeId(Integer paymentTypeId) {
    this.paymentTypeId = paymentTypeId;
    return this;
  }

   /**
   * Get paymentTypeId
   * @return paymentTypeId
  **/
  @ApiModelProperty(example = "14", value = "")
  public Integer getPaymentTypeId() {
    return paymentTypeId;
  }

  public void setPaymentTypeId(Integer paymentTypeId) {
    this.paymentTypeId = paymentTypeId;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(example = "acc123", value = "")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest checkNumber(String checkNumber) {
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * Get checkNumber
   * @return checkNumber
  **/
  @ApiModelProperty(example = "che123", value = "")
  public String getCheckNumber() {
    return checkNumber;
  }

  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest routingCode(String routingCode) {
    this.routingCode = routingCode;
    return this;
  }

   /**
   * Get routingCode
   * @return routingCode
  **/
  @ApiModelProperty(example = "rou123", value = "")
  public String getRoutingCode() {
    return routingCode;
  }

  public void setRoutingCode(String routingCode) {
    this.routingCode = routingCode;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest receiptNumber(String receiptNumber) {
    this.receiptNumber = receiptNumber;
    return this;
  }

   /**
   * Get receiptNumber
   * @return receiptNumber
  **/
  @ApiModelProperty(example = "rec123", value = "")
  public String getReceiptNumber() {
    return receiptNumber;
  }

  public void setReceiptNumber(String receiptNumber) {
    this.receiptNumber = receiptNumber;
  }

  public PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest bankNumber(String bankNumber) {
    this.bankNumber = bankNumber;
    return this;
  }

   /**
   * Get bankNumber
   * @return bankNumber
  **/
  @ApiModelProperty(example = "ban123", value = "")
  public String getBankNumber() {
    return bankNumber;
  }

  public void setBankNumber(String bankNumber) {
    this.bankNumber = bankNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest = (PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest) o;
    return Objects.equals(this.locale, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.locale) &&
        Objects.equals(this.dateFormat, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.dateFormat) &&
        Objects.equals(this.transactionDate, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.transactionDate) &&
        Objects.equals(this.transactionAmount, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.transactionAmount) &&
        Objects.equals(this.paymentTypeId, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.paymentTypeId) &&
        Objects.equals(this.accountNumber, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.accountNumber) &&
        Objects.equals(this.checkNumber, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.checkNumber) &&
        Objects.equals(this.routingCode, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.routingCode) &&
        Objects.equals(this.receiptNumber, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.receiptNumber) &&
        Objects.equals(this.bankNumber, postRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest.bankNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locale, dateFormat, transactionDate, transactionAmount, paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRecurringDepositAccountsRecurringDepositAccountIdTransactionsRequest {\n");
    
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    paymentTypeId: ").append(toIndentedString(paymentTypeId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    routingCode: ").append(toIndentedString(routingCode)).append("\n");
    sb.append("    receiptNumber: ").append(toIndentedString(receiptNumber)).append("\n");
    sb.append("    bankNumber: ").append(toIndentedString(bankNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

