/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JobDetailHistoryData;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * GetJobsResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:34:25.795+01:00")
public class GetJobsResponse {
  @SerializedName("jobId")
  private Long jobId = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("nextRunTime")
  private OffsetDateTime nextRunTime = null;

  @SerializedName("initializingError")
  private String initializingError = null;

  @SerializedName("cronExpression")
  private String cronExpression = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("currentlyRunning")
  private Boolean currentlyRunning = null;

  @SerializedName("lastRunHistory")
  private JobDetailHistoryData lastRunHistory = null;

  public GetJobsResponse jobId(Long jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Long getJobId() {
    return jobId;
  }

  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }

  public GetJobsResponse displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(example = "Update loan Summary", value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public GetJobsResponse nextRunTime(OffsetDateTime nextRunTime) {
    this.nextRunTime = nextRunTime;
    return this;
  }

   /**
   * Get nextRunTime
   * @return nextRunTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNextRunTime() {
    return nextRunTime;
  }

  public void setNextRunTime(OffsetDateTime nextRunTime) {
    this.nextRunTime = nextRunTime;
  }

  public GetJobsResponse initializingError(String initializingError) {
    this.initializingError = initializingError;
    return this;
  }

   /**
   * Get initializingError
   * @return initializingError
  **/
  @ApiModelProperty(value = "")
  public String getInitializingError() {
    return initializingError;
  }

  public void setInitializingError(String initializingError) {
    this.initializingError = initializingError;
  }

  public GetJobsResponse cronExpression(String cronExpression) {
    this.cronExpression = cronExpression;
    return this;
  }

   /**
   * Get cronExpression
   * @return cronExpression
  **/
  @ApiModelProperty(example = "0 0 22 1/1 * ? *", value = "")
  public String getCronExpression() {
    return cronExpression;
  }

  public void setCronExpression(String cronExpression) {
    this.cronExpression = cronExpression;
  }

  public GetJobsResponse active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public GetJobsResponse currentlyRunning(Boolean currentlyRunning) {
    this.currentlyRunning = currentlyRunning;
    return this;
  }

   /**
   * Get currentlyRunning
   * @return currentlyRunning
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean isCurrentlyRunning() {
    return currentlyRunning;
  }

  public void setCurrentlyRunning(Boolean currentlyRunning) {
    this.currentlyRunning = currentlyRunning;
  }

  public GetJobsResponse lastRunHistory(JobDetailHistoryData lastRunHistory) {
    this.lastRunHistory = lastRunHistory;
    return this;
  }

   /**
   * Get lastRunHistory
   * @return lastRunHistory
  **/
  @ApiModelProperty(value = "")
  public JobDetailHistoryData getLastRunHistory() {
    return lastRunHistory;
  }

  public void setLastRunHistory(JobDetailHistoryData lastRunHistory) {
    this.lastRunHistory = lastRunHistory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetJobsResponse getJobsResponse = (GetJobsResponse) o;
    return Objects.equals(this.jobId, getJobsResponse.jobId) &&
        Objects.equals(this.displayName, getJobsResponse.displayName) &&
        Objects.equals(this.nextRunTime, getJobsResponse.nextRunTime) &&
        Objects.equals(this.initializingError, getJobsResponse.initializingError) &&
        Objects.equals(this.cronExpression, getJobsResponse.cronExpression) &&
        Objects.equals(this.active, getJobsResponse.active) &&
        Objects.equals(this.currentlyRunning, getJobsResponse.currentlyRunning) &&
        Objects.equals(this.lastRunHistory, getJobsResponse.lastRunHistory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, displayName, nextRunTime, initializingError, cronExpression, active, currentlyRunning, lastRunHistory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetJobsResponse {\n");
    
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    nextRunTime: ").append(toIndentedString(nextRunTime)).append("\n");
    sb.append("    initializingError: ").append(toIndentedString(initializingError)).append("\n");
    sb.append("    cronExpression: ").append(toIndentedString(cronExpression)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    currentlyRunning: ").append(toIndentedString(currentlyRunning)).append("\n");
    sb.append("    lastRunHistory: ").append(toIndentedString(lastRunHistory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

