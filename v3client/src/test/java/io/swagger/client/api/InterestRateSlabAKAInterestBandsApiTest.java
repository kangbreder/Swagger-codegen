/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteInterestRateChartsChartIdChartSlabsResponse;
import io.swagger.client.model.GetInterestRateChartsChartIdChartSlabsResponse;
import io.swagger.client.model.PostInterestRateChartsChartIdChartSlabsRequest;
import io.swagger.client.model.PostInterestRateChartsChartIdChartSlabsResponse;
import io.swagger.client.model.PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest;
import io.swagger.client.model.PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InterestRateSlabAKAInterestBandsApi
 */
@Ignore
public class InterestRateSlabAKAInterestBandsApiTest {

    private final InterestRateSlabAKAInterestBandsApi api = new InterestRateSlabAKAInterestBandsApi();

    
    /**
     * Create a Slab
     *
     * Creates a new interest rate slab for an interest rate chart. Mandatory Fields periodType, fromPeriod, annualInterestRate Optional Fields toPeriod and description Example Requests:  interestratecharts/1/chartslabs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        Long chartId = null;
        PostInterestRateChartsChartIdChartSlabsRequest body = null;
        PostInterestRateChartsChartIdChartSlabsResponse response = api.create(chartId, body);

        // TODO: test validations
    }
    
    /**
     * Delete a Slab
     *
     * Delete a Slab from a chart
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        Long chartId = null;
        Long chartSlabId = null;
        DeleteInterestRateChartsChartIdChartSlabsResponse response = api.delete(chartId, chartSlabId);

        // TODO: test validations
    }
    
    /**
     * Retrieve all Slabs
     *
     * Retrieve list of slabs associated with a chart  Example Requests:  interestratecharts/1/chartslabs
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllTest() throws ApiException {
        Long chartId = null;
        List<GetInterestRateChartsChartIdChartSlabsResponse> response = api.retrieveAll(chartId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Slab
     *
     * Retrieve a slab associated with an Interest rate chart  Example Requests:  interestratecharts/1/chartslabs/1 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOneTest() throws ApiException {
        Long chartId = null;
        Long chartSlabId = null;
        GetInterestRateChartsChartIdChartSlabsResponse response = api.retrieveOne(chartId, chartSlabId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void templateTest() throws ApiException {
        String response = api.template();

        // TODO: test validations
    }
    
    /**
     * Update a Slab
     *
     * It updates the Slab from chart
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        Long chartId = null;
        Long chartSlabId = null;
        PutInterestRateChartsChartIdChartSlabsChartSlabIdRequest body = null;
        PutInterestRateChartsChartIdChartSlabsChartSlabIdResponse response = api.update(chartId, chartSlabId, body);

        // TODO: test validations
    }
    
}
