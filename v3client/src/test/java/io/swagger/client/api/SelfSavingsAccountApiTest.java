/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.GetSelfSavingsAccountsAccountIdChargesResponse;
import io.swagger.client.model.GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse;
import io.swagger.client.model.GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse;
import io.swagger.client.model.GetSelfSavingsAccountsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SelfSavingsAccountApi
 */
@Ignore
public class SelfSavingsAccountApiTest {

    private final SelfSavingsAccountApi api = new SelfSavingsAccountApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifySavingsAccountApplicationTest() throws ApiException {
        Long accountId = null;
        String command = null;
        String body = null;
        String response = api.modifySavingsAccountApplication(accountId, command, body);

        // TODO: test validations
    }
    
    /**
     * List Savings Charges
     *
     * Lists Savings Charges  Example Requests:  self/savingsaccounts/1/charges  self/savingsaccounts/1/charges?chargeStatus&#x3D;inactive  self/savingsaccounts/1/charges?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllSavingsAccountChargesTest() throws ApiException {
        Long accountId = null;
        String chargeStatus = null;
        List<GetSelfSavingsAccountsAccountIdChargesResponse> response = api.retrieveAllSavingsAccountCharges(accountId, chargeStatus);

        // TODO: test validations
    }
    
    /**
     * Retrieve a savings account
     *
     * Retrieves a savings account  Example Requests :  self/savingsaccounts/1   self/savingsaccounts/1?associations&#x3D;transactions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSavingsTest() throws ApiException {
        Long accountId = null;
        String chargeStatus = null;
        GetSelfSavingsAccountsResponse response = api.retrieveSavings(accountId, chargeStatus);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Savings account Charge
     *
     * Retrieves a Savings account Charge  Example Requests:  self/savingsaccounts/1/charges/5   self/savingsaccounts/1/charges/5?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSavingsAccountChargeTest() throws ApiException {
        Long accountId = null;
        Long savingsAccountChargeId = null;
        GetSelfSavingsAccountsAccountIdChargesSavingsAccountChargeIdResponse response = api.retrieveSavingsAccountCharge(accountId, savingsAccountChargeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Savings Account Transaction
     *
     * Retrieves Savings Account Transaction  Example Requests:  self/savingsaccounts/1/transactions/1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSavingsTransactionTest() throws ApiException {
        Long accountId = null;
        Long transactionId = null;
        GetSelfSavingsAccountsAccountIdTransactionsTransactionIdResponse response = api.retrieveSavingsTransaction(accountId, transactionId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitSavingsAccountApplicationTest() throws ApiException {
        String command = null;
        String body = null;
        String response = api.submitSavingsAccountApplication(command, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void templateTest() throws ApiException {
        Long clientId = null;
        Long productId = null;
        String body = null;
        String response = api.template(clientId, productId, body);

        // TODO: test validations
    }
    
}
