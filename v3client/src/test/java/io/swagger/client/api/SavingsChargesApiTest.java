/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
import io.swagger.client.model.GetSavingsAccountsSavingsAccountIdChargesResponse;
import io.swagger.client.model.GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
import io.swagger.client.model.GetSavingsAccountsSavingsAccountIdChargesTemplateResponse;
import io.swagger.client.model.PostSavingsAccountsSavingsAccountIdChargesRequest;
import io.swagger.client.model.PostSavingsAccountsSavingsAccountIdChargesResponse;
import io.swagger.client.model.PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest;
import io.swagger.client.model.PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
import io.swagger.client.model.PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest;
import io.swagger.client.model.PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SavingsChargesApi
 */
@Ignore
public class SavingsChargesApiTest {

    private final SavingsChargesApi api = new SavingsChargesApi();

    
    /**
     * Create a Savings account Charge
     *
     * Creates a Savings account Charge  Mandatory Fields for Savings account Charges: chargeId, amount  chargeId, amount, dueDate, dateFormat, locale  chargeId, amount, feeOnMonthDay, monthDayFormat, locale
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addSavingsAccountChargeTest() throws ApiException {
        Long savingsAccountId = null;
        PostSavingsAccountsSavingsAccountIdChargesRequest body = null;
        PostSavingsAccountsSavingsAccountIdChargesResponse response = api.addSavingsAccountCharge(savingsAccountId, body);

        // TODO: test validations
    }
    
    /**
     * Delete a Savings account Charge
     *
     * Note: Currently, A Savings account Charge may only be removed from Savings that are not yet approved.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSavingsAccountChargeTest() throws ApiException {
        Long savingsAccountId = null;
        Long savingsAccountChargeId = null;
        DeleteSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse response = api.deleteSavingsAccountCharge(savingsAccountId, savingsAccountChargeId);

        // TODO: test validations
    }
    
    /**
     * Pay a Savings account Charge | Waive off a Savings account Charge | Inactivate a Savings account Charge
     *
     * Pay a Savings account Charge:  An active charge will be paid when savings account is active and having sufficient balance.  Waive off a Savings account Charge:  Outstanding charge amount will be waived off.  Inactivate a Savings account Charge:  A charge will be allowed to inactivate when savings account is active and not having any dues as of today. If charge is overpaid, corresponding charge payment transactions will be reversed.  Showing request/response for &#39;Pay a Savings account Charge&#39;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void payOrWaiveSavingsAccountChargeTest() throws ApiException {
        Long savingsAccountId = null;
        Long savingsAccountChargeId = null;
        PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest body = null;
        String command = null;
        PostSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse response = api.payOrWaiveSavingsAccountCharge(savingsAccountId, savingsAccountChargeId, body, command);

        // TODO: test validations
    }
    
    /**
     * List Savings Charges
     *
     * Lists Savings Charges  Example Requests:  savingsaccounts/1/charges  savingsaccounts/1/charges?chargeStatus&#x3D;all  savingsaccounts/1/charges?chargeStatus&#x3D;inactive  savingsaccounts/1/charges?chargeStatus&#x3D;active  savingsaccounts/1/charges?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllSavingsAccountChargesTest() throws ApiException {
        Long savingsAccountId = null;
        String chargeStatus = null;
        List<GetSavingsAccountsSavingsAccountIdChargesResponse> response = api.retrieveAllSavingsAccountCharges(savingsAccountId, chargeStatus);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Savings account Charge
     *
     * Retrieves a Savings account Charge  Example Requests:  /savingsaccounts/1/charges/5   /savingsaccounts/1/charges/5?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSavingsAccountChargeTest() throws ApiException {
        Long savingsAccountId = null;
        Long savingsAccountChargeId = null;
        GetSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse response = api.retrieveSavingsAccountCharge(savingsAccountId, savingsAccountChargeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Savings Charges Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  savingsaccounts/1/charges/template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTemplateTest() throws ApiException {
        Long savingsAccountId = null;
        GetSavingsAccountsSavingsAccountIdChargesTemplateResponse response = api.retrieveTemplate(savingsAccountId);

        // TODO: test validations
    }
    
    /**
     * Update a Savings account Charge
     *
     * Currently Savings account Charges may be updated only if the Savings account is not yet approved.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSavingsAccountChargeTest() throws ApiException {
        Long savingsAccountId = null;
        Long savingsAccountChargeId = null;
        PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdRequest body = null;
        PutSavingsAccountsSavingsAccountIdChargesSavingsAccountChargeIdResponse response = api.updateSavingsAccountCharge(savingsAccountId, savingsAccountChargeId, body);

        // TODO: test validations
    }
    
}
