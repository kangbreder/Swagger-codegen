/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.GetSurveyResponse;
import io.swagger.client.model.PostSurveySurveyNameApptableIdRequest;
import io.swagger.client.model.PostSurveySurveyNameApptableIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SurveyApi
 */
@Ignore
public class SurveyApiTest {

    private final SurveyApi api = new SurveyApi();

    
    /**
     * Create an entry in the survey table
     *
     * Insert and entry in a survey table (full fill the survey).  Refer Link for sample Body:  [ https://demo.openmf.org/api-docs/apiLive.htm#survey_create ] 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDatatableEntryTest() throws ApiException {
        String surveyName = null;
        Long apptableId = null;
        PostSurveySurveyNameApptableIdRequest body2 = null;
        String body = null;
        PostSurveySurveyNameApptableIdResponse response = api.createDatatableEntry(surveyName, apptableId, body2, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDatatableEntriesTest() throws ApiException {
        String surveyName = null;
        Long clientId = null;
        Long fulfilledId = null;
        String response = api.deleteDatatableEntries(surveyName, clientId, fulfilledId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClientSurveyOverviewTest() throws ApiException {
        String surveyName = null;
        Long clientId = null;
        String response = api.getClientSurveyOverview(surveyName, clientId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyEntryTest() throws ApiException {
        String surveyName = null;
        Long clientId = null;
        Long entryId = null;
        String response = api.getSurveyEntry(surveyName, clientId, entryId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerTest() throws ApiException {
        String surveyName = null;
        String apptable = null;
        String body = null;
        String response = api.register(surveyName, apptable, body);

        // TODO: test validations
    }
    
    /**
     * Retrieve survey
     *
     * Lists a registered survey table details and the Apache Fineract Core application table they are registered to.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSurveyTest() throws ApiException {
        String surveyName = null;
        GetSurveyResponse response = api.retrieveSurvey(surveyName);

        // TODO: test validations
    }
    
    /**
     * Retrieve surveys
     *
     * Retrieve surveys. This allows to retrieve the list of survey tables registered .
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveSurveysTest() throws ApiException {
        List<GetSurveyResponse> response = api.retrieveSurveys();

        // TODO: test validations
    }
    
}
