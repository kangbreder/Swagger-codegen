/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.io.File;
import io.swagger.client.model.GetOfficesResponse;
import io.swagger.client.model.GetOfficesTemplateResponse;
import io.swagger.client.model.PostOfficesRequest;
import io.swagger.client.model.PostOfficesResponse;
import io.swagger.client.model.PutOfficesOfficeIdRequest;
import io.swagger.client.model.PutOfficesOfficeIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OfficesApi
 */
@Ignore
public class OfficesApiTest {

    private final OfficesApi api = new OfficesApi();

    
    /**
     * Create an Office
     *
     * Mandatory Fields name, openingDate, parentId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOfficeTest() throws ApiException {
        PostOfficesRequest body = null;
        PostOfficesResponse response = api.createOffice(body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOfficeTemplateTest() throws ApiException {
        String dateFormat = null;
        api.getOfficeTemplate(dateFormat);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postOfficeTemplateTest() throws ApiException {
        File file = null;
        String locale = null;
        String dateFormat = null;
        String response = api.postOfficeTemplate(file, locale, dateFormat);

        // TODO: test validations
    }
    
    /**
     * Retrieve an Office
     *
     * Example Requests:  offices/1   offices/1?template&#x3D;true   offices/1?fields&#x3D;id,name,parentName
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retreiveOfficeTest() throws ApiException {
        Long officeId = null;
        GetOfficesResponse response = api.retreiveOffice(officeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Office Details Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  offices/template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOfficeTemplateTest() throws ApiException {
        GetOfficesTemplateResponse response = api.retrieveOfficeTemplate();

        // TODO: test validations
    }
    
    /**
     * List Offices
     *
     * Example Requests:  offices   offices?fields&#x3D;id,name,openingDate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOfficesTest() throws ApiException {
        Boolean includeAllOffices = null;
        String orderBy = null;
        String sortOrder = null;
        List<GetOfficesResponse> response = api.retrieveOffices(includeAllOffices, orderBy, sortOrder);

        // TODO: test validations
    }
    
    /**
     * Update Office
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateOfficeTest() throws ApiException {
        Long officeId = null;
        PutOfficesOfficeIdRequest body = null;
        PutOfficesOfficeIdResponse response = api.updateOffice(officeId, body);

        // TODO: test validations
    }
    
}
