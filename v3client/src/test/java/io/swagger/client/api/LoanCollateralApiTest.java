/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteLoansLoanIdCollateralsCollateralIdResponse;
import io.swagger.client.model.GetLoansLoanIdCollateralsResponse;
import io.swagger.client.model.GetLoansLoanIdCollateralsTemplateResponse;
import io.swagger.client.model.PostLoansLoanIdCollateralsRequest;
import io.swagger.client.model.PostLoansLoanIdCollateralsResponse;
import io.swagger.client.model.PutLoansLoanIdCollateralsCollateralIdResponse;
import io.swagger.client.model.PutLoansLoandIdCollateralsCollateralIdRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LoanCollateralApi
 */
@Ignore
public class LoanCollateralApiTest {

    private final LoanCollateralApi api = new LoanCollateralApi();

    
    /**
     * Create a Collateral
     *
     * Note: Currently, Collaterals may be added only before a Loan is approved
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCollateralTest() throws ApiException {
        Long loanId = null;
        PostLoansLoanIdCollateralsRequest body = null;
        PostLoansLoanIdCollateralsResponse response = api.createCollateral(loanId, body);

        // TODO: test validations
    }
    
    /**
     * Remove a Collateral
     *
     * Note: A collateral can only be removed from Loans that are not yet approved.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCollateralTest() throws ApiException {
        Long loanId = null;
        Long collateralId = null;
        DeleteLoansLoanIdCollateralsCollateralIdResponse response = api.deleteCollateral(loanId, collateralId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Collateral Details Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  loans/1/collaterals/template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void newCollateralTemplateTest() throws ApiException {
        GetLoansLoanIdCollateralsTemplateResponse response = api.newCollateralTemplate();

        // TODO: test validations
    }
    
    /**
     * List Loan Collaterals
     *
     * Example Requests:  loans/1/collaterals   loans/1/collaterals?fields&#x3D;value,description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCollateralDetailsTest() throws ApiException {
        Long loanId = null;
        List<GetLoansLoanIdCollateralsResponse> response = api.retrieveCollateralDetails(loanId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Collateral
     *
     * Example Requests:  /loans/1/collaterals/1   /loans/1/collaterals/1?fields&#x3D;value,description
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCollateralDetails_0Test() throws ApiException {
        Long loanId = null;
        Long collateralId = null;
        GetLoansLoanIdCollateralsResponse response = api.retrieveCollateralDetails_0(loanId, collateralId);

        // TODO: test validations
    }
    
    /**
     * Update a Collateral
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCollateralTest() throws ApiException {
        Long loanId = null;
        Long collateralId = null;
        PutLoansLoandIdCollateralsCollateralIdRequest body = null;
        PutLoansLoanIdCollateralsCollateralIdResponse response = api.updateCollateral(loanId, collateralId, body);

        // TODO: test validations
    }
    
}
