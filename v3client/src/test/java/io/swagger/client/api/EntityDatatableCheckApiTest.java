/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteEntityDatatableChecksTemplateResponse;
import io.swagger.client.model.GetEntityDatatableChecksResponse;
import io.swagger.client.model.GetEntityDatatableChecksTemplateResponse;
import io.swagger.client.model.PostEntityDatatableChecksTemplateRequest;
import io.swagger.client.model.PostEntityDatatableChecksTemplateResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntityDatatableCheckApi
 */
@Ignore
public class EntityDatatableCheckApiTest {

    private final EntityDatatableCheckApi api = new EntityDatatableCheckApi();

    
    /**
     * Create Entity-Datatable Checks
     *
     * Mandatory Fields :  entity, status, datatableName  Non-Mandatory Fields :  productId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEntityDatatableCheckTest() throws ApiException {
        PostEntityDatatableChecksTemplateRequest body = null;
        PostEntityDatatableChecksTemplateResponse response = api.createEntityDatatableCheck(body);

        // TODO: test validations
    }
    
    /**
     * Delete Entity-Datatable Checks
     *
     * Deletes an existing Entity-Datatable Check
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDatatableTest() throws ApiException {
        Long entityDatatableCheckId = null;
        String body = null;
        DeleteEntityDatatableChecksTemplateResponse response = api.deleteDatatable(entityDatatableCheckId, body);

        // TODO: test validations
    }
    
    /**
     * Retrieve Entity-Datatable Checks Template
     *
     * This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:  Allowed Value Lists Example Request:  entityDatatableChecks/template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTemplateTest() throws ApiException {
        GetEntityDatatableChecksTemplateResponse response = api.getTemplate();

        // TODO: test validations
    }
    
    /**
     * List Entity-Datatable Checks
     *
     * The list capability of Entity-Datatable Checks can support pagination.  OPTIONAL ARGUMENTS offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit&#x3D;0, or limit&#x3D;-1 Example Request:  entityDatatableChecks?offset&#x3D;0&amp;limit&#x3D;15
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllTest() throws ApiException {
        Long status = null;
        String entity = null;
        Long productId = null;
        Integer offset = null;
        Integer limit = null;
        List<GetEntityDatatableChecksResponse> response = api.retrieveAll(status, entity, productId, offset, limit);

        // TODO: test validations
    }
    
}
