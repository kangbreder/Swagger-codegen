/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteInterestRateChartsChartIdResponse;
import io.swagger.client.model.GetInterestRateChartsResponse;
import io.swagger.client.model.GetInterestRateChartsTemplateResponse;
import io.swagger.client.model.PostInterestRateChartsRequest;
import io.swagger.client.model.PostInterestRateChartsResponse;
import io.swagger.client.model.PutInterestRateChartsChartIdRequest;
import io.swagger.client.model.PutInterestRateChartsChartIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InterestRateChartApi
 */
@Ignore
public class InterestRateChartApiTest {

    private final InterestRateChartApi api = new InterestRateChartApi();

    
    /**
     * Create a Chart
     *
     * Creates a new chart which can be attached to a term deposit products (FD or RD).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        PostInterestRateChartsRequest body = null;
        PostInterestRateChartsResponse response = api.create(body);

        // TODO: test validations
    }
    
    /**
     * Delete a Chart
     *
     * It deletes the chart
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        Long chartId = null;
        DeleteInterestRateChartsChartIdResponse response = api.delete(chartId);

        // TODO: test validations
    }
    
    /**
     * Retrieve all Charts
     *
     * Retrieve list of charts associated with a term deposit product(FD or RD). Example Requests:  interestratecharts?productId&#x3D;1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllTest() throws ApiException {
        Long productId = null;
        List<GetInterestRateChartsResponse> response = api.retrieveAll(productId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Chart
     *
     * It retrieves the Interest Rate Chart Example Requests:  interestratecharts/1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveOneTest() throws ApiException {
        Long chartId = null;
        GetInterestRateChartsResponse response = api.retrieveOne(chartId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Chart Details Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for creating a chart. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  interestratecharts/template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void templateTest() throws ApiException {
        GetInterestRateChartsTemplateResponse response = api.template();

        // TODO: test validations
    }
    
    /**
     * Update a Chart
     *
     * It updates the Chart.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        Long chartId = null;
        PutInterestRateChartsChartIdRequest body = null;
        PutInterestRateChartsChartIdResponse response = api.update(chartId, body);

        // TODO: test validations
    }
    
}
