/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteGLAccountsRequest;
import java.io.File;
import io.swagger.client.model.GetGLAccountsResponse;
import io.swagger.client.model.GetGLAccountsTemplateResponse;
import io.swagger.client.model.PostGLAccountsRequest;
import io.swagger.client.model.PostGLAccountsResponse;
import io.swagger.client.model.PutGLAccountsRequest;
import io.swagger.client.model.PutGLAccountsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeneralLedgerAccountApi
 */
@Ignore
public class GeneralLedgerAccountApiTest {

    private final GeneralLedgerAccountApi api = new GeneralLedgerAccountApi();

    
    /**
     * Create a General Ledger Account
     *
     * Note: You may optionally create Hierarchical Chart of Accounts by using the \&quot;parentId\&quot; property of an Account Mandatory Fields:  name, glCode, type, usage and manualEntriesAllowed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGLAccountTest() throws ApiException {
        PostGLAccountsRequest body = null;
        PostGLAccountsResponse response = api.createGLAccount(body);

        // TODO: test validations
    }
    
    /**
     * Delete an accounting closure
     *
     * Note: Only the latest accounting closure associated with a branch may be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGLAccountTest() throws ApiException {
        Long glAccountId = null;
        DeleteGLAccountsRequest response = api.deleteGLAccount(glAccountId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlAccountsTemplateTest() throws ApiException {
        String dateFormat = null;
        api.getGlAccountsTemplate(dateFormat);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postGlAccountsTemplateTest() throws ApiException {
        File file = null;
        String locale = null;
        String dateFormat = null;
        String response = api.postGlAccountsTemplate(file, locale, dateFormat);

        // TODO: test validations
    }
    
    /**
     * Retrieve a General Ledger Account
     *
     * Example Requests:  glaccounts/1   glaccounts/1?template&#x3D;true   glaccounts/1?fields&#x3D;name,glCode   glaccounts/1?fetchRunningBalance&#x3D;true
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retreiveAccountTest() throws ApiException {
        Long glAccountId = null;
        Boolean fetchRunningBalance = null;
        GetGLAccountsResponse response = api.retreiveAccount(glAccountId, fetchRunningBalance);

        // TODO: test validations
    }
    
    /**
     * List General Ledger Accounts
     *
     * ARGUMENTS type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional Example Requests:  glaccounts   glaccounts?type&#x3D;1&amp;manualEntriesAllowed&#x3D;true&amp;usage&#x3D;1&amp;disabled&#x3D;false  glaccounts?fetchRunningBalance&#x3D;true
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllAccountsTest() throws ApiException {
        Integer type = null;
        String searchParam = null;
        Integer usage = null;
        Boolean manualEntriesAllowed = null;
        Boolean disabled = null;
        Boolean fetchRunningBalance = null;
        List<GetGLAccountsResponse> response = api.retrieveAllAccounts(type, searchParam, usage, manualEntriesAllowed, disabled, fetchRunningBalance);

        // TODO: test validations
    }
    
    /**
     * Retrieve GL Accounts Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  glaccounts/template glaccounts/template?type&#x3D;1  type is optional and integer value from 1 to 5.  1.Assets  2.Liabilities  3.Equity  4.Income  5.Expenses
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveNewAccountDetailsTest() throws ApiException {
        Integer type = null;
        GetGLAccountsTemplateResponse response = api.retrieveNewAccountDetails(type);

        // TODO: test validations
    }
    
    /**
     * Update an Accounting closure
     *
     * Once an accounting closure is created, only the comments associated with it may be edited  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGLAccountTest() throws ApiException {
        Long glAccountId = null;
        PutGLAccountsRequest body = null;
        PutGLAccountsResponse response = api.updateGLAccount(glAccountId, body);

        // TODO: test validations
    }
    
}
