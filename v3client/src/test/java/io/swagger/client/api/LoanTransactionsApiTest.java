/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.GetLoansLoanIdTransactionsTemplateResponse;
import io.swagger.client.model.GetLoansLoanIdTransactionsTransactionIdResponse;
import io.swagger.client.model.PostLoansLoanIdTransactionsRequest;
import io.swagger.client.model.PostLoansLoanIdTransactionsResponse;
import io.swagger.client.model.PostLoansLoanIdTransactionsTransactionIdRequest;
import io.swagger.client.model.PostLoansLoanIdTransactionsTransactionIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LoanTransactionsApi
 */
@Ignore
public class LoanTransactionsApiTest {

    private final LoanTransactionsApi api = new LoanTransactionsApi();

    
    /**
     * Adjust a Transaction
     *
     * Note: there is no need to specify command&#x3D;{transactionType} parameter.  Mandatory Fields: transactionDate, transactionAmount
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void adjustLoanTransactionTest() throws ApiException {
        Long loanId = null;
        Long transactionId = null;
        PostLoansLoanIdTransactionsTransactionIdRequest body = null;
        PostLoansLoanIdTransactionsTransactionIdResponse response = api.adjustLoanTransaction(loanId, transactionId, body);

        // TODO: test validations
    }
    
    /**
     * Make a Repayment | Make a Refund of an Active Loan by Cash | Foreclosure of an Active Loan | Waive Interest | Write-off Loan | Make Recovery Payment | Undo Loan Write-off Transaction
     *
     * Make Recovery Payment:  This API allows collecting recovery payments for written-off loans
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeLoanTransactionTest() throws ApiException {
        Long loanId = null;
        PostLoansLoanIdTransactionsRequest body = null;
        String command = null;
        PostLoansLoanIdTransactionsResponse response = api.executeLoanTransaction(loanId, body, command);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Transaction Details
     *
     * Retrieves a Transaction Details  Example Request:  loans/5/transactions/3
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTransactionTest() throws ApiException {
        Long loanId = null;
        Long transactionId = null;
        GetLoansLoanIdTransactionsTransactionIdResponse response = api.retrieveTransaction(loanId, transactionId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Loan Transaction Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists  Example Request:  loans/1/transactions/template?command&#x3D;repayment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTransactionTemplateTest() throws ApiException {
        Long loanId = null;
        String command = null;
        String dateFormat = null;
        String transactionDate = null;
        String locale = null;
        GetLoansLoanIdTransactionsTemplateResponse response = api.retrieveTransactionTemplate(loanId, command, dateFormat, transactionDate, locale);

        // TODO: test validations
    }
    
}
