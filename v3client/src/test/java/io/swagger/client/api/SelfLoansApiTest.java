/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.GetSelfLoansLoanIdChargesResponse;
import io.swagger.client.model.GetSelfLoansLoanIdResponse;
import io.swagger.client.model.GetSelfLoansLoanIdTransactionsTransactionIdResponse;
import io.swagger.client.model.GetSelfLoansTemplateResponse;
import io.swagger.client.model.PostSelfLoansLoanIdRequest;
import io.swagger.client.model.PostSelfLoansLoanIdResponse;
import io.swagger.client.model.PostSelfLoansRequest;
import io.swagger.client.model.PostSelfLoansResponse;
import io.swagger.client.model.PutSelfLoansLoanIdRequest;
import io.swagger.client.model.PutSelfLoansLoanIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SelfLoansApi
 */
@Ignore
public class SelfLoansApiTest {

    private final SelfLoansApi api = new SelfLoansApi();

    
    /**
     * Calculate Loan Repayment Schedule | Submit a new Loan Application
     *
     * Calculate Loan Repayment Schedule:  Calculates Loan Repayment Schedule  Mandatory Fields: productId, principal, loanTermFrequency, loanTermFrequencyType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, expectedDisbursementDate, transactionProcessingStrategyId  Submit a new Loan Application:  Mandatory Fields: clientId, productId, principal, loanTermFrequency, loanTermFrequencyType, loanType, numberOfRepayments, repaymentEvery, repaymentFrequencyType, interestRatePerPeriod, amortizationType, interestType, interestCalculationPeriodType, transactionProcessingStrategyId, expectedDisbursementDate, submittedOnDate, loanType  Additional Mandatory Fields if interest recalculation is enabled for product and Rest frequency not same as repayment period: recalculationRestFrequencyDate  Additional Mandatory Fields if interest recalculation with interest/fee compounding is enabled for product and compounding frequency not same as repayment period: recalculationCompoundingFrequencyDate  Additional Mandatory Field if Entity-Datatable Check is enabled for the entity of type loan: datatables  Optional Fields: graceOnPrincipalPayment, graceOnInterestPayment, graceOnInterestCharged, linkAccountId, allowPartialPeriodInterestCalcualtion, fixedEmiAmount, maxOutstandingLoanBalance, disbursementData, graceOnArrearsAgeing, createStandingInstructionAtDisbursement (requires linkedAccountId if set to true)  Showing request/response for &#39;Submit a new Loan Application&#39;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void calculateLoanScheduleOrSubmitLoanApplicationTest() throws ApiException {
        PostSelfLoansRequest body = null;
        String command = null;
        PostSelfLoansResponse response = api.calculateLoanScheduleOrSubmitLoanApplication(body, command);

        // TODO: test validations
    }
    
    /**
     * Update a Loan Application
     *
     * Loan application can only be modified when in &#39;Submitted and pending approval&#39; state. Once the application is approved, the details cannot be changed using this method.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void modifyLoanApplicationTest() throws ApiException {
        Long loanId = null;
        PutSelfLoansLoanIdRequest body = null;
        PutSelfLoansLoanIdResponse response = api.modifyLoanApplication(loanId, body);

        // TODO: test validations
    }
    
    /**
     * List Loan Charges
     *
     * Lists loan Charges  Example Requests:  self/loans/1/charges   self/loans/1/charges?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllLoanChargesTest() throws ApiException {
        Long loanId = null;
        List<GetSelfLoansLoanIdChargesResponse> response = api.retrieveAllLoanCharges(loanId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveGuarantorDetailsTest() throws ApiException {
        Long loanId = null;
        String response = api.retrieveGuarantorDetails(loanId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Loan
     *
     * Retrieves a Loan  Example Requests:  self/loans/1   self/loans/1?fields&#x3D;id,principal,annualInterestRate   self/loans/1?fields&#x3D;id,principal,annualInterestRate&amp;associations&#x3D;repaymentSchedule,transactions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveLoanTest() throws ApiException {
        Long loanId = null;
        GetSelfLoansLoanIdResponse response = api.retrieveLoan(loanId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Loan Charge
     *
     * Retrieves a Loan Charge  Example Requests:  self/loans/1/charges/1   self/loans/1/charges/1?fields&#x3D;name,amountOrPercentage
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveLoanChargeTest() throws ApiException {
        Long loanId = null;
        Long chargeId = null;
        GetSelfLoansLoanIdChargesResponse response = api.retrieveLoanCharge(loanId, chargeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Loan Transaction Details
     *
     * Retrieves a Loan Transaction DetailsExample Request:  self/loans/5/transactions/3
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTransactionTest() throws ApiException {
        Long loanId = null;
        Long transactionId = null;
        GetSelfLoansLoanIdTransactionsTransactionIdResponse response = api.retrieveTransaction(loanId, transactionId);

        // TODO: test validations
    }
    
    /**
     * Applicant Withdraws from Loan Application
     *
     * Applicant Withdraws from Loan Application  Mandatory Fields: withdrawnOnDate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stateTransitionsTest() throws ApiException {
        Long loanId = null;
        PostSelfLoansLoanIdRequest body = null;
        String command = null;
        PostSelfLoansLoanIdResponse response = api.stateTransitions(loanId, body, command);

        // TODO: test validations
    }
    
    /**
     * Retrieve Loan Details Template
     *
     * Retrieves Loan Details Template  This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists  Example Requests:  self/loans/template?templateType&#x3D;individual&amp;clientId&#x3D;1   self/loans/template?templateType&#x3D;individual&amp;clientId&#x3D;1&amp;productId&#x3D;1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void templateTest() throws ApiException {
        Long clientId = null;
        Long productId = null;
        String templateType = null;
        GetSelfLoansTemplateResponse response = api.template(clientId, productId, templateType);

        // TODO: test validations
    }
    
}
