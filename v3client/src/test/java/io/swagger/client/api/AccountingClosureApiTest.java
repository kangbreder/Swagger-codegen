/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteGlClosuresResponse;
import io.swagger.client.model.GetGLClosureResponse;
import io.swagger.client.model.PostGLCLosuresRequest;
import io.swagger.client.model.PostGlClosuresResponse;
import io.swagger.client.model.PutGlClosuresRequest;
import io.swagger.client.model.PutGlClosuresResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountingClosureApi
 */
@Ignore
public class AccountingClosureApiTest {

    private final AccountingClosureApi api = new AccountingClosureApi();

    
    /**
     * Create an Accounting Closure
     *
     * Mandatory Fields officeId,closingDate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGLClosureTest() throws ApiException {
        PostGLCLosuresRequest body = null;
        PostGlClosuresResponse response = api.createGLClosure(body);

        // TODO: test validations
    }
    
    /**
     * Delete an accounting closure
     *
     * Note: Only the latest accounting closure associated with a branch may be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGLClosureTest() throws ApiException {
        Long glClosureId = null;
        DeleteGlClosuresResponse response = api.deleteGLClosure(glClosureId);

        // TODO: test validations
    }
    
    /**
     * Retrieve an Accounting Closure
     *
     * Example Requests:  glclosures/1   /glclosures/1?fields&#x3D;officeName,closingDate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retreiveClosureTest() throws ApiException {
        Long glClosureId = null;
        GetGLClosureResponse response = api.retreiveClosure(glClosureId);

        // TODO: test validations
    }
    
    /**
     * List Accounting closures
     *
     * Example Requests:  glclosures
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllClosuresTest() throws ApiException {
        Long officeId = null;
        List<GetGLClosureResponse> response = api.retrieveAllClosures(officeId);

        // TODO: test validations
    }
    
    /**
     * Update an Accounting closure
     *
     * Once an accounting closure is created, only the comments associated with it may be edited
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGLClosureTest() throws ApiException {
        Long glClosureId = null;
        PutGlClosuresRequest body = null;
        PutGlClosuresResponse response = api.updateGLClosure(glClosureId, body);

        // TODO: test validations
    }
    
}
