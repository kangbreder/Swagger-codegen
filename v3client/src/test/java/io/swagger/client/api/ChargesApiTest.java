/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DeleteChargesChargeIdResponse;
import io.swagger.client.model.GetChargesResponse;
import io.swagger.client.model.GetChargesTemplateResponse;
import io.swagger.client.model.PostChargesRequest;
import io.swagger.client.model.PostChargesResponse;
import io.swagger.client.model.PutChargesChargeIdRequest;
import io.swagger.client.model.PutChargesChargeIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargesApi
 */
@Ignore
public class ChargesApiTest {

    private final ChargesApi api = new ChargesApi();

    
    /**
     * Create/Define a Charge
     *
     * Define a new charge that can later be associated with loans and savings through their respective product definitions or directly on each account instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createChargeTest() throws ApiException {
        PostChargesRequest body = null;
        PostChargesResponse response = api.createCharge(body);

        // TODO: test validations
    }
    
    /**
     * Delete a Charge
     *
     * Deletes a Charge.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteChargeTest() throws ApiException {
        Long chargeId = null;
        DeleteChargesChargeIdResponse response = api.deleteCharge(chargeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Charges
     *
     * Returns the list of defined charges.  Example Requests:  charges
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllChargesTest() throws ApiException {
        List<GetChargesResponse> response = api.retrieveAllCharges();

        // TODO: test validations
    }
    
    /**
     * Retrieve a Charge
     *
     * Returns the details of a defined Charge.  Example Requests:  charges/1
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveChargeTest() throws ApiException {
        Long chargeId = null;
        GetChargesResponse response = api.retrieveCharge(chargeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Charge Template
     *
     * This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:  Field Defaults Allowed Value Lists Example Request:  charges/template 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveNewChargeDetailsTest() throws ApiException {
        GetChargesTemplateResponse response = api.retrieveNewChargeDetails();

        // TODO: test validations
    }
    
    /**
     * Update a Charge
     *
     * Updates the details of a Charge.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateChargeTest() throws ApiException {
        Long chargeId = null;
        PutChargesChargeIdRequest body = null;
        PutChargesChargeIdResponse response = api.updateCharge(chargeId, body);

        // TODO: test validations
    }
    
}
