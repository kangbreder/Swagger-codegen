/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.GetTaxesGroupResponse;
import io.swagger.client.model.PostTaxesGroupRequest;
import io.swagger.client.model.PostTaxesGroupResponse;
import io.swagger.client.model.PutTaxesGroupTaxGroupIdRequest;
import io.swagger.client.model.PutTaxesGroupTaxGroupIdResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaxGroupApi
 */
@Ignore
public class TaxGroupApiTest {

    private final TaxGroupApi api = new TaxGroupApi();

    
    /**
     * Create a new Tax Group
     *
     * Create a new Tax Group Mandatory Fields: name and taxComponents Mandatory Fields in taxComponents: taxComponentId Optional Fields in taxComponents: id, startDate and endDate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTaxGroupTest() throws ApiException {
        PostTaxesGroupRequest body = null;
        PostTaxesGroupResponse response = api.createTaxGroup(body);

        // TODO: test validations
    }
    
    /**
     * List Tax Group
     *
     * List Tax Group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveAllTaxGroupsTest() throws ApiException {
        List<GetTaxesGroupResponse> response = api.retrieveAllTaxGroups();

        // TODO: test validations
    }
    
    /**
     * Retrieve Tax Group
     *
     * Retrieve Tax Group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTaxGroupTest() throws ApiException {
        Long taxGroupId = null;
        GetTaxesGroupResponse response = api.retrieveTaxGroup(taxGroupId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveTemplateTest() throws ApiException {
        String response = api.retrieveTemplate();

        // TODO: test validations
    }
    
    /**
     * Update Tax Group
     *
     * Updates Tax Group. Only end date can be up-datable and can insert new tax components.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaxGroupTest() throws ApiException {
        Long taxGroupId = null;
        PutTaxesGroupTaxGroupIdRequest body = null;
        PutTaxesGroupTaxGroupIdResponse response = api.updateTaxGroup(taxGroupId, body);

        // TODO: test validations
    }
    
}
