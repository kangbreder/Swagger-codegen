/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PostAccountTransfersRefundByTransferRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:32:31.746+01:00")
public class PostAccountTransfersRefundByTransferRequest {
  @SerializedName("fromAccountId")
  private Integer fromAccountId = null;

  @SerializedName("fromAccountType")
  private Integer fromAccountType = null;

  @SerializedName("toOfficeId")
  private Integer toOfficeId = null;

  @SerializedName("toClientId")
  private Integer toClientId = null;

  @SerializedName("toAccountType")
  private Integer toAccountType = null;

  @SerializedName("toAccountId")
  private Integer toAccountId = null;

  @SerializedName("transferAmount")
  private Float transferAmount = null;

  @SerializedName("transferDate")
  private String transferDate = null;

  @SerializedName("transferDescription")
  private String transferDescription = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("dateFormat")
  private String dateFormat = null;

  @SerializedName("fromClientId")
  private Integer fromClientId = null;

  @SerializedName("fromOfficeId")
  private Integer fromOfficeId = null;

  public PostAccountTransfersRefundByTransferRequest fromAccountId(Integer fromAccountId) {
    this.fromAccountId = fromAccountId;
    return this;
  }

   /**
   * Get fromAccountId
   * @return fromAccountId
  **/
  @ApiModelProperty(example = "2", value = "")
  public Integer getFromAccountId() {
    return fromAccountId;
  }

  public void setFromAccountId(Integer fromAccountId) {
    this.fromAccountId = fromAccountId;
  }

  public PostAccountTransfersRefundByTransferRequest fromAccountType(Integer fromAccountType) {
    this.fromAccountType = fromAccountType;
    return this;
  }

   /**
   * Get fromAccountType
   * @return fromAccountType
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getFromAccountType() {
    return fromAccountType;
  }

  public void setFromAccountType(Integer fromAccountType) {
    this.fromAccountType = fromAccountType;
  }

  public PostAccountTransfersRefundByTransferRequest toOfficeId(Integer toOfficeId) {
    this.toOfficeId = toOfficeId;
    return this;
  }

   /**
   * Get toOfficeId
   * @return toOfficeId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getToOfficeId() {
    return toOfficeId;
  }

  public void setToOfficeId(Integer toOfficeId) {
    this.toOfficeId = toOfficeId;
  }

  public PostAccountTransfersRefundByTransferRequest toClientId(Integer toClientId) {
    this.toClientId = toClientId;
    return this;
  }

   /**
   * Get toClientId
   * @return toClientId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getToClientId() {
    return toClientId;
  }

  public void setToClientId(Integer toClientId) {
    this.toClientId = toClientId;
  }

  public PostAccountTransfersRefundByTransferRequest toAccountType(Integer toAccountType) {
    this.toAccountType = toAccountType;
    return this;
  }

   /**
   * Get toAccountType
   * @return toAccountType
  **/
  @ApiModelProperty(example = "2", value = "")
  public Integer getToAccountType() {
    return toAccountType;
  }

  public void setToAccountType(Integer toAccountType) {
    this.toAccountType = toAccountType;
  }

  public PostAccountTransfersRefundByTransferRequest toAccountId(Integer toAccountId) {
    this.toAccountId = toAccountId;
    return this;
  }

   /**
   * Get toAccountId
   * @return toAccountId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getToAccountId() {
    return toAccountId;
  }

  public void setToAccountId(Integer toAccountId) {
    this.toAccountId = toAccountId;
  }

  public PostAccountTransfersRefundByTransferRequest transferAmount(Float transferAmount) {
    this.transferAmount = transferAmount;
    return this;
  }

   /**
   * Get transferAmount
   * @return transferAmount
  **/
  @ApiModelProperty(example = "130.0", value = "")
  public Float getTransferAmount() {
    return transferAmount;
  }

  public void setTransferAmount(Float transferAmount) {
    this.transferAmount = transferAmount;
  }

  public PostAccountTransfersRefundByTransferRequest transferDate(String transferDate) {
    this.transferDate = transferDate;
    return this;
  }

   /**
   * Get transferDate
   * @return transferDate
  **/
  @ApiModelProperty(example = "31 October 2014", value = "")
  public String getTransferDate() {
    return transferDate;
  }

  public void setTransferDate(String transferDate) {
    this.transferDate = transferDate;
  }

  public PostAccountTransfersRefundByTransferRequest transferDescription(String transferDescription) {
    this.transferDescription = transferDescription;
    return this;
  }

   /**
   * Get transferDescription
   * @return transferDescription
  **/
  @ApiModelProperty(example = "Transfer refund to my savings account", value = "")
  public String getTransferDescription() {
    return transferDescription;
  }

  public void setTransferDescription(String transferDescription) {
    this.transferDescription = transferDescription;
  }

  public PostAccountTransfersRefundByTransferRequest locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(example = "en", value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public PostAccountTransfersRefundByTransferRequest dateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
    return this;
  }

   /**
   * Get dateFormat
   * @return dateFormat
  **/
  @ApiModelProperty(example = "dd MMMM yyyy", value = "")
  public String getDateFormat() {
    return dateFormat;
  }

  public void setDateFormat(String dateFormat) {
    this.dateFormat = dateFormat;
  }

  public PostAccountTransfersRefundByTransferRequest fromClientId(Integer fromClientId) {
    this.fromClientId = fromClientId;
    return this;
  }

   /**
   * Get fromClientId
   * @return fromClientId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getFromClientId() {
    return fromClientId;
  }

  public void setFromClientId(Integer fromClientId) {
    this.fromClientId = fromClientId;
  }

  public PostAccountTransfersRefundByTransferRequest fromOfficeId(Integer fromOfficeId) {
    this.fromOfficeId = fromOfficeId;
    return this;
  }

   /**
   * Get fromOfficeId
   * @return fromOfficeId
  **/
  @ApiModelProperty(example = "1", value = "")
  public Integer getFromOfficeId() {
    return fromOfficeId;
  }

  public void setFromOfficeId(Integer fromOfficeId) {
    this.fromOfficeId = fromOfficeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostAccountTransfersRefundByTransferRequest postAccountTransfersRefundByTransferRequest = (PostAccountTransfersRefundByTransferRequest) o;
    return Objects.equals(this.fromAccountId, postAccountTransfersRefundByTransferRequest.fromAccountId) &&
        Objects.equals(this.fromAccountType, postAccountTransfersRefundByTransferRequest.fromAccountType) &&
        Objects.equals(this.toOfficeId, postAccountTransfersRefundByTransferRequest.toOfficeId) &&
        Objects.equals(this.toClientId, postAccountTransfersRefundByTransferRequest.toClientId) &&
        Objects.equals(this.toAccountType, postAccountTransfersRefundByTransferRequest.toAccountType) &&
        Objects.equals(this.toAccountId, postAccountTransfersRefundByTransferRequest.toAccountId) &&
        Objects.equals(this.transferAmount, postAccountTransfersRefundByTransferRequest.transferAmount) &&
        Objects.equals(this.transferDate, postAccountTransfersRefundByTransferRequest.transferDate) &&
        Objects.equals(this.transferDescription, postAccountTransfersRefundByTransferRequest.transferDescription) &&
        Objects.equals(this.locale, postAccountTransfersRefundByTransferRequest.locale) &&
        Objects.equals(this.dateFormat, postAccountTransfersRefundByTransferRequest.dateFormat) &&
        Objects.equals(this.fromClientId, postAccountTransfersRefundByTransferRequest.fromClientId) &&
        Objects.equals(this.fromOfficeId, postAccountTransfersRefundByTransferRequest.fromOfficeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromAccountId, fromAccountType, toOfficeId, toClientId, toAccountType, toAccountId, transferAmount, transferDate, transferDescription, locale, dateFormat, fromClientId, fromOfficeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostAccountTransfersRefundByTransferRequest {\n");
    
    sb.append("    fromAccountId: ").append(toIndentedString(fromAccountId)).append("\n");
    sb.append("    fromAccountType: ").append(toIndentedString(fromAccountType)).append("\n");
    sb.append("    toOfficeId: ").append(toIndentedString(toOfficeId)).append("\n");
    sb.append("    toClientId: ").append(toIndentedString(toClientId)).append("\n");
    sb.append("    toAccountType: ").append(toIndentedString(toAccountType)).append("\n");
    sb.append("    toAccountId: ").append(toIndentedString(toAccountId)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    transferDate: ").append(toIndentedString(transferDate)).append("\n");
    sb.append("    transferDescription: ").append(toIndentedString(transferDescription)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    dateFormat: ").append(toIndentedString(dateFormat)).append("\n");
    sb.append("    fromClientId: ").append(toIndentedString(fromClientId)).append("\n");
    sb.append("    fromOfficeId: ").append(toIndentedString(fromOfficeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

