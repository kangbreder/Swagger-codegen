/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AppUserClientMapping;
import io.swagger.client.model.GrantedAuthority;
import io.swagger.client.model.Office;
import io.swagger.client.model.Role;
import io.swagger.client.model.Staff;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * AppUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:32:31.746+01:00")
public class AppUser {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("firstname")
  private String firstname = null;

  @SerializedName("lastname")
  private String lastname = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("accountNonExpired")
  private Boolean accountNonExpired = null;

  @SerializedName("accountNonLocked")
  private Boolean accountNonLocked = null;

  @SerializedName("credentialsNonExpired")
  private Boolean credentialsNonExpired = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("office")
  private Office office = null;

  @SerializedName("staff")
  private Staff staff = null;

  @SerializedName("roles")
  private List<Role> roles = null;

  @SerializedName("lastTimePasswordUpdated")
  private OffsetDateTime lastTimePasswordUpdated = null;

  @SerializedName("passwordNeverExpires")
  private Boolean passwordNeverExpires = null;

  @SerializedName("appUserClientMappings")
  private List<AppUserClientMapping> appUserClientMappings = null;

  @SerializedName("selfServiceUser")
  private Boolean selfServiceUser = null;

  @SerializedName("staffId")
  private Long staffId = null;

  @SerializedName("staffDisplayName")
  private String staffDisplayName = null;

  @SerializedName("notEnabled")
  private Boolean notEnabled = null;

  @SerializedName("authorities")
  private List<GrantedAuthority> authorities = null;

  @SerializedName("new")
  private Boolean _new = null;

  public AppUser id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AppUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public AppUser username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public AppUser firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @ApiModelProperty(value = "")
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

  public AppUser lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @ApiModelProperty(value = "")
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

  public AppUser password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public AppUser accountNonExpired(Boolean accountNonExpired) {
    this.accountNonExpired = accountNonExpired;
    return this;
  }

   /**
   * Get accountNonExpired
   * @return accountNonExpired
  **/
  @ApiModelProperty(value = "")
  public Boolean isAccountNonExpired() {
    return accountNonExpired;
  }

  public void setAccountNonExpired(Boolean accountNonExpired) {
    this.accountNonExpired = accountNonExpired;
  }

  public AppUser accountNonLocked(Boolean accountNonLocked) {
    this.accountNonLocked = accountNonLocked;
    return this;
  }

   /**
   * Get accountNonLocked
   * @return accountNonLocked
  **/
  @ApiModelProperty(value = "")
  public Boolean isAccountNonLocked() {
    return accountNonLocked;
  }

  public void setAccountNonLocked(Boolean accountNonLocked) {
    this.accountNonLocked = accountNonLocked;
  }

  public AppUser credentialsNonExpired(Boolean credentialsNonExpired) {
    this.credentialsNonExpired = credentialsNonExpired;
    return this;
  }

   /**
   * Get credentialsNonExpired
   * @return credentialsNonExpired
  **/
  @ApiModelProperty(value = "")
  public Boolean isCredentialsNonExpired() {
    return credentialsNonExpired;
  }

  public void setCredentialsNonExpired(Boolean credentialsNonExpired) {
    this.credentialsNonExpired = credentialsNonExpired;
  }

  public AppUser enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public AppUser deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

  public AppUser office(Office office) {
    this.office = office;
    return this;
  }

   /**
   * Get office
   * @return office
  **/
  @ApiModelProperty(value = "")
  public Office getOffice() {
    return office;
  }

  public void setOffice(Office office) {
    this.office = office;
  }

  public AppUser staff(Staff staff) {
    this.staff = staff;
    return this;
  }

   /**
   * Get staff
   * @return staff
  **/
  @ApiModelProperty(value = "")
  public Staff getStaff() {
    return staff;
  }

  public void setStaff(Staff staff) {
    this.staff = staff;
  }

  public AppUser roles(List<Role> roles) {
    this.roles = roles;
    return this;
  }

  public AppUser addRolesItem(Role rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<Role>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public List<Role> getRoles() {
    return roles;
  }

  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public AppUser lastTimePasswordUpdated(OffsetDateTime lastTimePasswordUpdated) {
    this.lastTimePasswordUpdated = lastTimePasswordUpdated;
    return this;
  }

   /**
   * Get lastTimePasswordUpdated
   * @return lastTimePasswordUpdated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastTimePasswordUpdated() {
    return lastTimePasswordUpdated;
  }

  public void setLastTimePasswordUpdated(OffsetDateTime lastTimePasswordUpdated) {
    this.lastTimePasswordUpdated = lastTimePasswordUpdated;
  }

  public AppUser passwordNeverExpires(Boolean passwordNeverExpires) {
    this.passwordNeverExpires = passwordNeverExpires;
    return this;
  }

   /**
   * Get passwordNeverExpires
   * @return passwordNeverExpires
  **/
  @ApiModelProperty(value = "")
  public Boolean isPasswordNeverExpires() {
    return passwordNeverExpires;
  }

  public void setPasswordNeverExpires(Boolean passwordNeverExpires) {
    this.passwordNeverExpires = passwordNeverExpires;
  }

  public AppUser appUserClientMappings(List<AppUserClientMapping> appUserClientMappings) {
    this.appUserClientMappings = appUserClientMappings;
    return this;
  }

  public AppUser addAppUserClientMappingsItem(AppUserClientMapping appUserClientMappingsItem) {
    if (this.appUserClientMappings == null) {
      this.appUserClientMappings = new ArrayList<AppUserClientMapping>();
    }
    this.appUserClientMappings.add(appUserClientMappingsItem);
    return this;
  }

   /**
   * Get appUserClientMappings
   * @return appUserClientMappings
  **/
  @ApiModelProperty(value = "")
  public List<AppUserClientMapping> getAppUserClientMappings() {
    return appUserClientMappings;
  }

  public void setAppUserClientMappings(List<AppUserClientMapping> appUserClientMappings) {
    this.appUserClientMappings = appUserClientMappings;
  }

  public AppUser selfServiceUser(Boolean selfServiceUser) {
    this.selfServiceUser = selfServiceUser;
    return this;
  }

   /**
   * Get selfServiceUser
   * @return selfServiceUser
  **/
  @ApiModelProperty(value = "")
  public Boolean isSelfServiceUser() {
    return selfServiceUser;
  }

  public void setSelfServiceUser(Boolean selfServiceUser) {
    this.selfServiceUser = selfServiceUser;
  }

  public AppUser staffId(Long staffId) {
    this.staffId = staffId;
    return this;
  }

   /**
   * Get staffId
   * @return staffId
  **/
  @ApiModelProperty(value = "")
  public Long getStaffId() {
    return staffId;
  }

  public void setStaffId(Long staffId) {
    this.staffId = staffId;
  }

  public AppUser staffDisplayName(String staffDisplayName) {
    this.staffDisplayName = staffDisplayName;
    return this;
  }

   /**
   * Get staffDisplayName
   * @return staffDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getStaffDisplayName() {
    return staffDisplayName;
  }

  public void setStaffDisplayName(String staffDisplayName) {
    this.staffDisplayName = staffDisplayName;
  }

  public AppUser notEnabled(Boolean notEnabled) {
    this.notEnabled = notEnabled;
    return this;
  }

   /**
   * Get notEnabled
   * @return notEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isNotEnabled() {
    return notEnabled;
  }

  public void setNotEnabled(Boolean notEnabled) {
    this.notEnabled = notEnabled;
  }

  public AppUser authorities(List<GrantedAuthority> authorities) {
    this.authorities = authorities;
    return this;
  }

  public AppUser addAuthoritiesItem(GrantedAuthority authoritiesItem) {
    if (this.authorities == null) {
      this.authorities = new ArrayList<GrantedAuthority>();
    }
    this.authorities.add(authoritiesItem);
    return this;
  }

   /**
   * Get authorities
   * @return authorities
  **/
  @ApiModelProperty(value = "")
  public List<GrantedAuthority> getAuthorities() {
    return authorities;
  }

  public void setAuthorities(List<GrantedAuthority> authorities) {
    this.authorities = authorities;
  }

  public AppUser _new(Boolean _new) {
    this._new = _new;
    return this;
  }

   /**
   * Get _new
   * @return _new
  **/
  @ApiModelProperty(value = "")
  public Boolean isNew() {
    return _new;
  }

  public void setNew(Boolean _new) {
    this._new = _new;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppUser appUser = (AppUser) o;
    return Objects.equals(this.id, appUser.id) &&
        Objects.equals(this.email, appUser.email) &&
        Objects.equals(this.username, appUser.username) &&
        Objects.equals(this.firstname, appUser.firstname) &&
        Objects.equals(this.lastname, appUser.lastname) &&
        Objects.equals(this.password, appUser.password) &&
        Objects.equals(this.accountNonExpired, appUser.accountNonExpired) &&
        Objects.equals(this.accountNonLocked, appUser.accountNonLocked) &&
        Objects.equals(this.credentialsNonExpired, appUser.credentialsNonExpired) &&
        Objects.equals(this.enabled, appUser.enabled) &&
        Objects.equals(this.deleted, appUser.deleted) &&
        Objects.equals(this.office, appUser.office) &&
        Objects.equals(this.staff, appUser.staff) &&
        Objects.equals(this.roles, appUser.roles) &&
        Objects.equals(this.lastTimePasswordUpdated, appUser.lastTimePasswordUpdated) &&
        Objects.equals(this.passwordNeverExpires, appUser.passwordNeverExpires) &&
        Objects.equals(this.appUserClientMappings, appUser.appUserClientMappings) &&
        Objects.equals(this.selfServiceUser, appUser.selfServiceUser) &&
        Objects.equals(this.staffId, appUser.staffId) &&
        Objects.equals(this.staffDisplayName, appUser.staffDisplayName) &&
        Objects.equals(this.notEnabled, appUser.notEnabled) &&
        Objects.equals(this.authorities, appUser.authorities) &&
        Objects.equals(this._new, appUser._new);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, email, username, firstname, lastname, password, accountNonExpired, accountNonLocked, credentialsNonExpired, enabled, deleted, office, staff, roles, lastTimePasswordUpdated, passwordNeverExpires, appUserClientMappings, selfServiceUser, staffId, staffDisplayName, notEnabled, authorities, _new);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppUser {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    accountNonExpired: ").append(toIndentedString(accountNonExpired)).append("\n");
    sb.append("    accountNonLocked: ").append(toIndentedString(accountNonLocked)).append("\n");
    sb.append("    credentialsNonExpired: ").append(toIndentedString(credentialsNonExpired)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    office: ").append(toIndentedString(office)).append("\n");
    sb.append("    staff: ").append(toIndentedString(staff)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    lastTimePasswordUpdated: ").append(toIndentedString(lastTimePasswordUpdated)).append("\n");
    sb.append("    passwordNeverExpires: ").append(toIndentedString(passwordNeverExpires)).append("\n");
    sb.append("    appUserClientMappings: ").append(toIndentedString(appUserClientMappings)).append("\n");
    sb.append("    selfServiceUser: ").append(toIndentedString(selfServiceUser)).append("\n");
    sb.append("    staffId: ").append(toIndentedString(staffId)).append("\n");
    sb.append("    staffDisplayName: ").append(toIndentedString(staffDisplayName)).append("\n");
    sb.append("    notEnabled: ").append(toIndentedString(notEnabled)).append("\n");
    sb.append("    authorities: ").append(toIndentedString(authorities)).append("\n");
    sb.append("    _new: ").append(toIndentedString(_new)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

