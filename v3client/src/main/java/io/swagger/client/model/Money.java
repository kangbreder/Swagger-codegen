/*
 * Apache Fineract API Documentation
 * Apache Fineract is a secure, multi-tenanted microfinance platform. <br />              The goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://demo.openmf.org  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.              <br/>The API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MonetaryCurrency;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Money
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-17T20:32:31.746+01:00")
public class Money {
  @SerializedName("currencyCode")
  private String currencyCode = null;

  @SerializedName("currencyDigitsAfterDecimal")
  private Integer currencyDigitsAfterDecimal = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("currency")
  private MonetaryCurrency currency = null;

  @SerializedName("zero")
  private Boolean zero = null;

  @SerializedName("greaterThanZero")
  private Boolean greaterThanZero = null;

  @SerializedName("lessThanZero")
  private Boolean lessThanZero = null;

  @SerializedName("amountDefaultedToNullIfZero")
  private BigDecimal amountDefaultedToNullIfZero = null;

  @SerializedName("currencyInMultiplesOf")
  private Integer currencyInMultiplesOf = null;

  public Money currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public Money currencyDigitsAfterDecimal(Integer currencyDigitsAfterDecimal) {
    this.currencyDigitsAfterDecimal = currencyDigitsAfterDecimal;
    return this;
  }

   /**
   * Get currencyDigitsAfterDecimal
   * @return currencyDigitsAfterDecimal
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrencyDigitsAfterDecimal() {
    return currencyDigitsAfterDecimal;
  }

  public void setCurrencyDigitsAfterDecimal(Integer currencyDigitsAfterDecimal) {
    this.currencyDigitsAfterDecimal = currencyDigitsAfterDecimal;
  }

  public Money amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public Money currency(MonetaryCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public MonetaryCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(MonetaryCurrency currency) {
    this.currency = currency;
  }

  public Money zero(Boolean zero) {
    this.zero = zero;
    return this;
  }

   /**
   * Get zero
   * @return zero
  **/
  @ApiModelProperty(value = "")
  public Boolean isZero() {
    return zero;
  }

  public void setZero(Boolean zero) {
    this.zero = zero;
  }

  public Money greaterThanZero(Boolean greaterThanZero) {
    this.greaterThanZero = greaterThanZero;
    return this;
  }

   /**
   * Get greaterThanZero
   * @return greaterThanZero
  **/
  @ApiModelProperty(value = "")
  public Boolean isGreaterThanZero() {
    return greaterThanZero;
  }

  public void setGreaterThanZero(Boolean greaterThanZero) {
    this.greaterThanZero = greaterThanZero;
  }

  public Money lessThanZero(Boolean lessThanZero) {
    this.lessThanZero = lessThanZero;
    return this;
  }

   /**
   * Get lessThanZero
   * @return lessThanZero
  **/
  @ApiModelProperty(value = "")
  public Boolean isLessThanZero() {
    return lessThanZero;
  }

  public void setLessThanZero(Boolean lessThanZero) {
    this.lessThanZero = lessThanZero;
  }

  public Money amountDefaultedToNullIfZero(BigDecimal amountDefaultedToNullIfZero) {
    this.amountDefaultedToNullIfZero = amountDefaultedToNullIfZero;
    return this;
  }

   /**
   * Get amountDefaultedToNullIfZero
   * @return amountDefaultedToNullIfZero
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmountDefaultedToNullIfZero() {
    return amountDefaultedToNullIfZero;
  }

  public void setAmountDefaultedToNullIfZero(BigDecimal amountDefaultedToNullIfZero) {
    this.amountDefaultedToNullIfZero = amountDefaultedToNullIfZero;
  }

  public Money currencyInMultiplesOf(Integer currencyInMultiplesOf) {
    this.currencyInMultiplesOf = currencyInMultiplesOf;
    return this;
  }

   /**
   * Get currencyInMultiplesOf
   * @return currencyInMultiplesOf
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrencyInMultiplesOf() {
    return currencyInMultiplesOf;
  }

  public void setCurrencyInMultiplesOf(Integer currencyInMultiplesOf) {
    this.currencyInMultiplesOf = currencyInMultiplesOf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Money money = (Money) o;
    return Objects.equals(this.currencyCode, money.currencyCode) &&
        Objects.equals(this.currencyDigitsAfterDecimal, money.currencyDigitsAfterDecimal) &&
        Objects.equals(this.amount, money.amount) &&
        Objects.equals(this.currency, money.currency) &&
        Objects.equals(this.zero, money.zero) &&
        Objects.equals(this.greaterThanZero, money.greaterThanZero) &&
        Objects.equals(this.lessThanZero, money.lessThanZero) &&
        Objects.equals(this.amountDefaultedToNullIfZero, money.amountDefaultedToNullIfZero) &&
        Objects.equals(this.currencyInMultiplesOf, money.currencyInMultiplesOf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, currencyDigitsAfterDecimal, amount, currency, zero, greaterThanZero, lessThanZero, amountDefaultedToNullIfZero, currencyInMultiplesOf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Money {\n");
    
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencyDigitsAfterDecimal: ").append(toIndentedString(currencyDigitsAfterDecimal)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    zero: ").append(toIndentedString(zero)).append("\n");
    sb.append("    greaterThanZero: ").append(toIndentedString(greaterThanZero)).append("\n");
    sb.append("    lessThanZero: ").append(toIndentedString(lessThanZero)).append("\n");
    sb.append("    amountDefaultedToNullIfZero: ").append(toIndentedString(amountDefaultedToNullIfZero)).append("\n");
    sb.append("    currencyInMultiplesOf: ").append(toIndentedString(currencyInMultiplesOf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

